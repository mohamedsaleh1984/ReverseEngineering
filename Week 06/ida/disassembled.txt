.text:0000000000000000 ;
.text:0000000000000000 ; +-------------------------------------------------------------------------+
.text:0000000000000000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
.text:0000000000000000 ; |           Copyright (c) 2024 Hex-Rays, <support@hex-rays.com>           |
.text:0000000000000000 ; |                            Freeware version                             |
.text:0000000000000000 ; +-------------------------------------------------------------------------+
.text:0000000000000000 ;
.text:0000000000000000 ; Input SHA256 : 5F7A20D6D14452ADF4C802ACBED096817BAB1941915B543361D9C6349ADDB50B
.text:0000000000000000 ; Input MD5    : DEEDA2DB62F728F9DD2B4536646CB6DD
.text:0000000000000000 ; Input CRC32  : AECF2FAB
.text:0000000000000000 ; Compiler     : GNU C++
.text:0000000000000000
.text:0000000000000000 ; File Name   : C:\Users\Moham\OneDrive\Desktop\reverse-engineering\Week 06\assignment6_1.o
.text:0000000000000000 ; Format      : ELF64 for x86-64 (Relocatable)
.text:0000000000000000 ;
.text:0000000000000000 ; Source File : 'assignment6_1.cpp'
.text:0000000000000000
.text:0000000000000000                 .686p
.text:0000000000000000                 .mmx
.text:0000000000000000                 .model flat
.text:0000000000000000 .intel_syntax noprefix
.text:0000000000000000
.text:0000000000000000 ; ===========================================================================
.text:0000000000000000
.text:0000000000000000 ; Segment type: Pure code
.text:0000000000000000 ; Segment permissions: Read/Execute
.text:0000000000000000 _text           segment byte public 'CODE' use64
.text:0000000000000000                 assume cs:_text
.text:0000000000000000                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text:0000000000000000
.text:0000000000000000 ; =============== S U B R O U T I N E =======================================
.text:0000000000000000
.text:0000000000000000 ; Attributes: bp-based frame
.text:0000000000000000
.text:0000000000000000 ; __int64 DisplayMenu(void)
.text:0000000000000000                 public _Z11DisplayMenuv
.text:0000000000000000 _Z11DisplayMenuv proc near              ; DATA XREF: .eh_frame:0000000000000448↓o
.text:0000000000000000                 push    rbp
.text:0000000000000001                 mov     rbp, rsp
.text:0000000000000004                 lea     rsi, asc_384    ; "----------------"
.text:000000000000000B                 lea     rdi, _ZSt4cout  ; std::cout
.text:0000000000000012                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:0000000000000017                 lea     rsi, a1Add      ; "- 1)Add -"
.text:000000000000001E                 lea     rdi, _ZSt4cout  ; std::cout
.text:0000000000000025                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:000000000000002A                 lea     rsi, a2Subtract ; "- 2)Subtract -"
.text:0000000000000031                 lea     rdi, _ZSt4cout  ; std::cout
.text:0000000000000038                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:000000000000003D                 lea     rsi, a3Multiply ; "- 3)Multiply -"
.text:0000000000000044                 lea     rdi, _ZSt4cout  ; std::cout
.text:000000000000004B                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:0000000000000050                 lea     rsi, a4Exit     ; "- 4)Exit -"
.text:0000000000000057                 lea     rdi, _ZSt4cout  ; std::cout
.text:000000000000005E                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:0000000000000063                 lea     rsi, asc_384    ; "----------------"
.text:000000000000006A                 lea     rdi, _ZSt4cout  ; std::cout
.text:0000000000000071                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:0000000000000076                 nop
.text:0000000000000077                 pop     rbp
.text:0000000000000078                 retn
.text:0000000000000078 _Z11DisplayMenuv endp
.text:0000000000000078
.text:0000000000000079
.text:0000000000000079 ; =============== S U B R O U T I N E =======================================
.text:0000000000000079
.text:0000000000000079 ; Attributes: bp-based frame
.text:0000000000000079
.text:0000000000000079 ; int __fastcall main(int argc, const char **argv, const char **envp)
.text:0000000000000079                 public main
.text:0000000000000079 main            proc near               ; DATA XREF: .eh_frame:0000000000000468↓o
.text:0000000000000079
.text:0000000000000079 var_14          = dword ptr -14h
.text:0000000000000079 var_10          = dword ptr -10h
.text:0000000000000079 var_C           = dword ptr -0Ch
.text:0000000000000079 var_8           = qword ptr -8
.text:0000000000000079
.text:0000000000000079 ; __unwind {
.text:0000000000000079                 push    rbp
.text:000000000000007A                 mov     rbp, rsp
.text:000000000000007D                 sub     rsp, 20h
.text:0000000000000081                 mov     rax, fs:28h
.text:000000000000008A                 mov     [rbp+var_8], rax
.text:000000000000008E                 xor     eax, eax
.text:0000000000000090                 mov     [rbp+var_14], 0
.text:0000000000000097
.text:0000000000000097 loc_97:                                 ; CODE XREF: main+14B↓j
.text:0000000000000097                                         ; main+1EA↓j ...
.text:0000000000000097                 mov     eax, [rbp+var_14]
.text:000000000000009A                 cmp     eax, 5
.text:000000000000009D                 jz      loc_308
.text:00000000000000A3                 lea     rsi, asc_3C8    ; "----------------\n"
.text:00000000000000AA                 lea     rdi, _ZSt4cout  ; std::cout
.text:00000000000000B1                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:00000000000000B6                 lea     rsi, a1Add_0    ; "- 1)Add -\n"
.text:00000000000000BD                 lea     rdi, _ZSt4cout  ; std::cout
.text:00000000000000C4                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:00000000000000C9                 lea     rsi, a2Subtract_0 ; "- 2)Subtract -\n"
.text:00000000000000D0                 lea     rdi, _ZSt4cout  ; std::cout
.text:00000000000000D7                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:00000000000000DC                 lea     rsi, a3Multiply_0 ; "- 3)Multiply -\n"
.text:00000000000000E3                 lea     rdi, _ZSt4cout  ; std::cout
.text:00000000000000EA                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:00000000000000EF                 lea     rsi, a4Exit_0   ; "- 4)Exit -\n"
.text:00000000000000F6                 lea     rdi, _ZSt4cout  ; std::cout
.text:00000000000000FD                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:0000000000000102                 lea     rsi, asc_3C8    ; "----------------\n"
.text:0000000000000109                 lea     rdi, _ZSt4cout  ; std::cout
.text:0000000000000110                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:0000000000000115                 lea     rax, [rbp+var_14]
.text:0000000000000119                 mov     rsi, rax
.text:000000000000011C                 lea     rdi, _ZSt3cin   ; std::cin
.text:0000000000000123                 call    _ZNSirsERi      ; PIC mode
.text:0000000000000128                 mov     eax, [rbp+var_14]
.text:000000000000012B                 cmp     eax, 1
.text:000000000000012E                 jnz     loc_1C9
.text:0000000000000134                 lea     rax, [rbp+var_10]
.text:0000000000000138                 mov     rsi, rax
.text:000000000000013B                 lea     rdi, _ZSt3cin   ; std::cin
.text:0000000000000142                 call    _ZNSirsERi      ; PIC mode
.text:0000000000000147                 mov     rdx, rax
.text:000000000000014A                 lea     rax, [rbp+var_C]
.text:000000000000014E                 mov     rsi, rax
.text:0000000000000151                 mov     rdi, rdx
.text:0000000000000154                 call    _ZNSirsERi      ; PIC mode
.text:0000000000000159                 mov     eax, [rbp+var_10]
.text:000000000000015C                 mov     esi, eax
.text:000000000000015E                 lea     rdi, _ZSt4cout  ; std::cout
.text:0000000000000165                 call    _ZNSolsEi       ; PIC mode
.text:000000000000016A                 lea     rsi, asc_411    ; " - "
.text:0000000000000171                 mov     rdi, rax
.text:0000000000000174                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:0000000000000179                 mov     rdx, rax
.text:000000000000017C                 mov     eax, [rbp+var_C]
.text:000000000000017F                 mov     esi, eax
.text:0000000000000181                 mov     rdi, rdx
.text:0000000000000184                 call    _ZNSolsEi       ; PIC mode
.text:0000000000000189                 lea     rsi, asc_415    ; " = "
.text:0000000000000190                 mov     rdi, rax
.text:0000000000000193                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:0000000000000198                 mov     rcx, rax
.text:000000000000019B                 mov     edx, [rbp+var_10]
.text:000000000000019E                 mov     eax, [rbp+var_C]
.text:00000000000001A1                 sub     edx, eax
.text:00000000000001A3                 mov     eax, edx
.text:00000000000001A5                 mov     esi, eax
.text:00000000000001A7                 mov     rdi, rcx
.text:00000000000001AA                 call    _ZNSolsEi       ; PIC mode
.text:00000000000001AF                 mov     rdx, rax
.text:00000000000001B2                 mov     rax, offset _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_ ; std::endl<char,std::char_traits<char>>(std::ostream &)
.text:00000000000001B9                 mov     rsi, rax
.text:00000000000001BC                 mov     rdi, rdx
.text:00000000000001BF                 call    _ZNSolsEPFRSoS_E ; PIC mode
.text:00000000000001C4                 jmp     loc_97
.text:00000000000001C9 ; ---------------------------------------------------------------------------
.text:00000000000001C9
.text:00000000000001C9 loc_1C9:                                ; CODE XREF: main+B5↑j
.text:00000000000001C9                 mov     eax, [rbp+var_14]
.text:00000000000001CC                 cmp     eax, 2
.text:00000000000001CF                 jnz     loc_268
.text:00000000000001D5                 lea     rax, [rbp+var_10]
.text:00000000000001D9                 mov     rsi, rax
.text:00000000000001DC                 lea     rdi, _ZSt3cin   ; std::cin
.text:00000000000001E3                 call    _ZNSirsERi      ; PIC mode
.text:00000000000001E8                 mov     rdx, rax
.text:00000000000001EB                 lea     rax, [rbp+var_C]
.text:00000000000001EF                 mov     rsi, rax
.text:00000000000001F2                 mov     rdi, rdx
.text:00000000000001F5                 call    _ZNSirsERi      ; PIC mode
.text:00000000000001FA                 mov     eax, [rbp+var_10]
.text:00000000000001FD                 mov     esi, eax
.text:00000000000001FF                 lea     rdi, _ZSt4cout  ; std::cout
.text:0000000000000206                 call    _ZNSolsEi       ; PIC mode
.text:000000000000020B                 lea     rsi, asc_411    ; " - "
.text:0000000000000212                 mov     rdi, rax
.text:0000000000000215                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:000000000000021A                 mov     rdx, rax
.text:000000000000021D                 mov     eax, [rbp+var_C]
.text:0000000000000220                 mov     esi, eax
.text:0000000000000222                 mov     rdi, rdx
.text:0000000000000225                 call    _ZNSolsEi       ; PIC mode
.text:000000000000022A                 lea     rsi, asc_415    ; " = "
.text:0000000000000231                 mov     rdi, rax
.text:0000000000000234                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:0000000000000239                 mov     rcx, rax
.text:000000000000023C                 mov     edx, [rbp+var_10]
.text:000000000000023F                 mov     eax, [rbp+var_C]
.text:0000000000000242                 add     eax, edx
.text:0000000000000244                 mov     esi, eax
.text:0000000000000246                 mov     rdi, rcx
.text:0000000000000249                 call    _ZNSolsEi       ; PIC mode
.text:000000000000024E                 mov     rdx, rax
.text:0000000000000251                 mov     rax, offset _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_ ; std::endl<char,std::char_traits<char>>(std::ostream &)
.text:0000000000000258                 mov     rsi, rax
.text:000000000000025B                 mov     rdi, rdx
.text:000000000000025E                 call    _ZNSolsEPFRSoS_E ; PIC mode
.text:0000000000000263                 jmp     loc_97
.text:0000000000000268 ; ---------------------------------------------------------------------------
.text:0000000000000268
.text:0000000000000268 loc_268:                                ; CODE XREF: main+156↑j
.text:0000000000000268                 mov     eax, [rbp+var_14]
.text:000000000000026B                 cmp     eax, 3
.text:000000000000026E                 jnz     loc_97
.text:0000000000000274                 lea     rax, [rbp+var_10]
.text:0000000000000278                 mov     rsi, rax
.text:000000000000027B                 lea     rdi, _ZSt3cin   ; std::cin
.text:0000000000000282                 call    _ZNSirsERi      ; PIC mode
.text:0000000000000287                 mov     rdx, rax
.text:000000000000028A                 lea     rax, [rbp+var_C]
.text:000000000000028E                 mov     rsi, rax
.text:0000000000000291                 mov     rdi, rdx
.text:0000000000000294                 call    _ZNSirsERi      ; PIC mode
.text:0000000000000299                 mov     eax, [rbp+var_10]
.text:000000000000029C                 mov     esi, eax
.text:000000000000029E                 lea     rdi, _ZSt4cout  ; std::cout
.text:00000000000002A5                 call    _ZNSolsEi       ; PIC mode
.text:00000000000002AA                 lea     rsi, asc_411    ; " - "
.text:00000000000002B1                 mov     rdi, rax
.text:00000000000002B4                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:00000000000002B9                 mov     rdx, rax
.text:00000000000002BC                 mov     eax, [rbp+var_C]
.text:00000000000002BF                 mov     esi, eax
.text:00000000000002C1                 mov     rdi, rdx
.text:00000000000002C4                 call    _ZNSolsEi       ; PIC mode
.text:00000000000002C9                 lea     rsi, asc_415    ; " = "
.text:00000000000002D0                 mov     rdi, rax
.text:00000000000002D3                 call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; PIC mode
.text:00000000000002D8                 mov     rcx, rax
.text:00000000000002DB                 mov     eax, [rbp+var_10]
.text:00000000000002DE                 mov     esi, [rbp+var_C]
.text:00000000000002E1                 cdq
.text:00000000000002E2                 idiv    esi
.text:00000000000002E4                 mov     esi, eax
.text:00000000000002E6                 mov     rdi, rcx
.text:00000000000002E9                 call    _ZNSolsEi       ; PIC mode
.text:00000000000002EE                 mov     rdx, rax
.text:00000000000002F1                 mov     rax, offset _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_ ; std::endl<char,std::char_traits<char>>(std::ostream &)
.text:00000000000002F8                 mov     rsi, rax
.text:00000000000002FB                 mov     rdi, rdx
.text:00000000000002FE                 call    _ZNSolsEPFRSoS_E ; PIC mode
.text:0000000000000303                 jmp     loc_97
.text:0000000000000308 ; ---------------------------------------------------------------------------
.text:0000000000000308
.text:0000000000000308 loc_308:                                ; CODE XREF: main+24↑j
.text:0000000000000308                 mov     eax, 0
.text:000000000000030D                 mov     rcx, [rbp+var_8]
.text:0000000000000311                 xor     rcx, fs:28h
.text:000000000000031A                 jz      short locret_321
.text:000000000000031C                 call    __stack_chk_fail ; PIC mode
.text:0000000000000321 ; ---------------------------------------------------------------------------
.text:0000000000000321
.text:0000000000000321 locret_321:                             ; CODE XREF: main+2A1↑j
.text:0000000000000321                 leave
.text:0000000000000322                 retn
.text:0000000000000322 ; } // starts at 79
.text:0000000000000322 main            endp
.text:0000000000000322
.text:0000000000000323
.text:0000000000000323 ; =============== S U B R O U T I N E =======================================
.text:0000000000000323
.text:0000000000000323 ; Attributes: bp-based frame
.text:0000000000000323
.text:0000000000000323 ; __int64 __fastcall __static_initialization_and_destruction_0(int, int)
.text:0000000000000323 _Z41__static_initialization_and_destruction_0ii proc near
.text:0000000000000323                                         ; CODE XREF: _GLOBAL__sub_I__Z11DisplayMenuv+E↓p
.text:0000000000000323                                         ; DATA XREF: .eh_frame:0000000000000488↓o
.text:0000000000000323
.text:0000000000000323 var_8           = dword ptr -8
.text:0000000000000323 var_4           = dword ptr -4
.text:0000000000000323
.text:0000000000000323 ; __unwind {
.text:0000000000000323                 push    rbp
.text:0000000000000324                 mov     rbp, rsp
.text:0000000000000327                 sub     rsp, 10h
.text:000000000000032B                 mov     [rbp+var_4], edi
.text:000000000000032E                 mov     [rbp+var_8], esi
.text:0000000000000331                 cmp     [rbp+var_4], 1
.text:0000000000000335                 jnz     short loc_369
.text:0000000000000337                 cmp     [rbp+var_8], 0FFFFh
.text:000000000000033E                 jnz     short loc_369
.text:0000000000000340                 lea     rdi, _ZStL8__ioinit ; this
.text:0000000000000347                 call    _ZNSt8ios_base4InitC1Ev ; PIC mode
.text:000000000000034C                 lea     rdx, __dso_handle ; lpdso_handle
.text:0000000000000353                 lea     rsi, _ZStL8__ioinit ; obj
.text:000000000000035A                 mov     rax, offset _ZNSt8ios_base4InitD1Ev ; std::ios_base::Init::~Init()
.text:0000000000000361                 mov     rdi, rax        ; lpfunc
.text:0000000000000364                 call    __cxa_atexit    ; PIC mode
.text:0000000000000369
.text:0000000000000369 loc_369:                                ; CODE XREF: __static_initialization_and_destruction_0(int,int)+12↑j
.text:0000000000000369                                         ; __static_initialization_and_destruction_0(int,int)+1B↑j
.text:0000000000000369                 nop
.text:000000000000036A                 leave
.text:000000000000036B                 retn
.text:000000000000036B ; } // starts at 323
.text:000000000000036B _Z41__static_initialization_and_destruction_0ii endp
.text:000000000000036B
.text:000000000000036C
.text:000000000000036C ; =============== S U B R O U T I N E =======================================
.text:000000000000036C
.text:000000000000036C ; Attributes: bp-based frame
.text:000000000000036C
.text:000000000000036C _GLOBAL__sub_I__Z11DisplayMenuv proc near
.text:000000000000036C                                         ; DATA XREF: .init_array:0000000000000420↓o
.text:000000000000036C                                         ; .eh_frame:00000000000004A8↓o
.text:000000000000036C ; __unwind {
.text:000000000000036C                 push    rbp
.text:000000000000036D                 mov     rbp, rsp
.text:0000000000000370                 mov     esi, 0FFFFh     ; int
.text:0000000000000375                 mov     edi, 1          ; int
.text:000000000000037A                 call    _Z41__static_initialization_and_destruction_0ii ; __static_initialization_and_destruction_0(int,int)
.text:000000000000037F                 pop     rbp
.text:0000000000000380                 retn
.text:0000000000000380 ; } // starts at 36C
.text:0000000000000380 _GLOBAL__sub_I__Z11DisplayMenuv endp
.text:0000000000000380
.text:0000000000000380 _text           ends
.text:0000000000000380
.data:0000000000000381 ; ===========================================================================
.data:0000000000000381
.data:0000000000000381 ; Segment type: Zero-length
.data:0000000000000381 ; Segment permissions: Read/Write
.data:0000000000000381 _data           segment byte public 'DATA' use64
.data:0000000000000381 _data           ends
.data:0000000000000381
.bss:0000000000000382 ; ===========================================================================
.bss:0000000000000382
.bss:0000000000000382 ; Segment type: Uninitialized
.bss:0000000000000382 ; Segment permissions: Read/Write
.bss:0000000000000382 _bss            segment byte public 'BSS' use64
.bss:0000000000000382                 assume cs:_bss
.bss:0000000000000382                 ;org 382h
.bss:0000000000000382                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.bss:0000000000000382 ; std::ios_base::Init std::__ioinit
.bss:0000000000000382 _ZStL8__ioinit  db    ? ;               ; DATA XREF: __static_initialization_and_destruction_0(int,int)+1D↑o
.bss:0000000000000382                                         ; __static_initialization_and_destruction_0(int,int)+30↑o
.bss:0000000000000382 _bss            ends
.bss:0000000000000382
.rodata:0000000000000383 ; ===========================================================================
.rodata:0000000000000383
.rodata:0000000000000383 ; Segment type: Pure data
.rodata:0000000000000383 ; Segment permissions: Read
.rodata:0000000000000383 _rodata         segment byte public 'CONST' use64
.rodata:0000000000000383                 assume cs:_rodata
.rodata:0000000000000383                 ;org 383h
.rodata:0000000000000383 ; std::piecewise_construct
.rodata:0000000000000383 _ZStL19piecewise_construct db    0
.rodata:0000000000000384 asc_384         db '----------------',0 ; DATA XREF: DisplayMenu(void)+4↑o
.rodata:0000000000000384                                         ; DisplayMenu(void)+63↑o
.rodata:0000000000000395 a1Add           db '- 1)Add -',0        ; DATA XREF: DisplayMenu(void)+17↑o
.rodata:000000000000039F a2Subtract      db '- 2)Subtract -',0   ; DATA XREF: DisplayMenu(void)+2A↑o
.rodata:00000000000003AE a3Multiply      db '- 3)Multiply -',0   ; DATA XREF: DisplayMenu(void)+3D↑o
.rodata:00000000000003BD a4Exit          db '- 4)Exit -',0       ; DATA XREF: DisplayMenu(void)+50↑o
.rodata:00000000000003C8 asc_3C8         db '----------------',0Ah,0
.rodata:00000000000003C8                                         ; DATA XREF: main+2A↑o
.rodata:00000000000003C8                                         ; main+89↑o
.rodata:00000000000003DA a1Add_0         db '- 1)Add -',0Ah,0    ; DATA XREF: main+3D↑o
.rodata:00000000000003E5 a2Subtract_0    db '- 2)Subtract -',0Ah,0
.rodata:00000000000003E5                                         ; DATA XREF: main+50↑o
.rodata:00000000000003F5 a3Multiply_0    db '- 3)Multiply -',0Ah,0
.rodata:00000000000003F5                                         ; DATA XREF: main+63↑o
.rodata:0000000000000405 a4Exit_0        db '- 4)Exit -',0Ah,0   ; DATA XREF: main+76↑o
.rodata:0000000000000411 asc_411         db ' - ',0              ; DATA XREF: main+F1↑o
.rodata:0000000000000411                                         ; main+192↑o ...
.rodata:0000000000000415 asc_415         db ' = ',0              ; DATA XREF: main+110↑o
.rodata:0000000000000415                                         ; main+1B1↑o ...
.rodata:0000000000000415 _rodata         ends
.rodata:0000000000000415
.init_array:0000000000000420 ; ===========================================================================
.init_array:0000000000000420
.init_array:0000000000000420 ; Segment type: Pure data
.init_array:0000000000000420 ; Segment permissions: Read/Write
.init_array:0000000000000420 _init_array     segment qword public 'DATA' use64
.init_array:0000000000000420                 assume cs:_init_array
.init_array:0000000000000420                 ;org 420h
.init_array:0000000000000420                 dq offset _GLOBAL__sub_I__Z11DisplayMenuv
.init_array:0000000000000420 _init_array     ends
.init_array:0000000000000420
.eh_frame:0000000000000428 ; ===========================================================================
.eh_frame:0000000000000428
.eh_frame:0000000000000428 ; Segment type: Pure data
.eh_frame:0000000000000428 ; Segment permissions: Read
.eh_frame:0000000000000428 _eh_frame       segment qword public 'CONST' use64
.eh_frame:0000000000000428                 assume cs:_eh_frame
.eh_frame:0000000000000428                 ;org 428h
.eh_frame:0000000000000428                 db  14h
.eh_frame:0000000000000429                 db    0
.eh_frame:000000000000042A                 db    0
.eh_frame:000000000000042B                 db    0
.eh_frame:000000000000042C                 db    0
.eh_frame:000000000000042D                 db    0
.eh_frame:000000000000042E                 db    0
.eh_frame:000000000000042F                 db    0
.eh_frame:0000000000000430                 db    1
.eh_frame:0000000000000431                 db  7Ah ; z
.eh_frame:0000000000000432                 db  52h ; R
.eh_frame:0000000000000433                 db    0
.eh_frame:0000000000000434                 db    1
.eh_frame:0000000000000435                 db  78h ; x
.eh_frame:0000000000000436                 db  10h
.eh_frame:0000000000000437                 db    1
.eh_frame:0000000000000438                 db  1Bh
.eh_frame:0000000000000439                 db  0Ch
.eh_frame:000000000000043A                 db    7
.eh_frame:000000000000043B                 db    8
.eh_frame:000000000000043C                 db  90h
.eh_frame:000000000000043D                 db    1
.eh_frame:000000000000043E                 db    0
.eh_frame:000000000000043F                 db    0
.eh_frame:0000000000000440                 db  1Ch
.eh_frame:0000000000000441                 db    0
.eh_frame:0000000000000442                 db    0
.eh_frame:0000000000000443                 db    0
.eh_frame:0000000000000444                 db  1Ch
.eh_frame:0000000000000445                 db    0
.eh_frame:0000000000000446                 db    0
.eh_frame:0000000000000447                 db    0
.eh_frame:0000000000000448                 dd offset _Z11DisplayMenuv - $ ; DisplayMenu(void)
.eh_frame:000000000000044C                 db  79h ; y
.eh_frame:000000000000044D                 db    0
.eh_frame:000000000000044E                 db    0
.eh_frame:000000000000044F                 db    0
.eh_frame:0000000000000450                 db    0
.eh_frame:0000000000000451                 db  41h ; A
.eh_frame:0000000000000452                 db  0Eh
.eh_frame:0000000000000453                 db  10h
.eh_frame:0000000000000454                 db  86h
.eh_frame:0000000000000455                 db    2
.eh_frame:0000000000000456                 db  43h ; C
.eh_frame:0000000000000457                 db  0Dh
.eh_frame:0000000000000458                 db    6
.eh_frame:0000000000000459                 db    2
.eh_frame:000000000000045A                 db  74h ; t
.eh_frame:000000000000045B                 db  0Ch
.eh_frame:000000000000045C                 db    7
.eh_frame:000000000000045D                 db    8
.eh_frame:000000000000045E                 db    0
.eh_frame:000000000000045F                 db    0
.eh_frame:0000000000000460                 db  1Ch
.eh_frame:0000000000000461                 db    0
.eh_frame:0000000000000462                 db    0
.eh_frame:0000000000000463                 db    0
.eh_frame:0000000000000464                 db  3Ch ; <
.eh_frame:0000000000000465                 db    0
.eh_frame:0000000000000466                 db    0
.eh_frame:0000000000000467                 db    0
.eh_frame:0000000000000468                 dd offset main - $
.eh_frame:000000000000046C                 db 0AAh
.eh_frame:000000000000046D                 db    2
.eh_frame:000000000000046E                 db    0
.eh_frame:000000000000046F                 db    0
.eh_frame:0000000000000470                 db    0
.eh_frame:0000000000000471                 db  41h ; A
.eh_frame:0000000000000472                 db  0Eh
.eh_frame:0000000000000473                 db  10h
.eh_frame:0000000000000474                 db  86h
.eh_frame:0000000000000475                 db    2
.eh_frame:0000000000000476                 db  43h ; C
.eh_frame:0000000000000477                 db  0Dh
.eh_frame:0000000000000478                 db    6
.eh_frame:0000000000000479                 db    3
.eh_frame:000000000000047A                 db 0A5h
.eh_frame:000000000000047B                 db    2
.eh_frame:000000000000047C                 db  0Ch
.eh_frame:000000000000047D                 db    7
.eh_frame:000000000000047E                 db    8
.eh_frame:000000000000047F                 db    0
.eh_frame:0000000000000480                 db  1Ch
.eh_frame:0000000000000481                 db    0
.eh_frame:0000000000000482                 db    0
.eh_frame:0000000000000483                 db    0
.eh_frame:0000000000000484                 db  5Ch ; \
.eh_frame:0000000000000485                 db    0
.eh_frame:0000000000000486                 db    0
.eh_frame:0000000000000487                 db    0
.eh_frame:0000000000000488                 dd offset _Z41__static_initialization_and_destruction_0ii - $ ; __static_initialization_and_destruction_0(int,int)
.eh_frame:000000000000048C                 db  49h ; I
.eh_frame:000000000000048D                 db    0
.eh_frame:000000000000048E                 db    0
.eh_frame:000000000000048F                 db    0
.eh_frame:0000000000000490                 db    0
.eh_frame:0000000000000491                 db  41h ; A
.eh_frame:0000000000000492                 db  0Eh
.eh_frame:0000000000000493                 db  10h
.eh_frame:0000000000000494                 db  86h
.eh_frame:0000000000000495                 db    2
.eh_frame:0000000000000496                 db  43h ; C
.eh_frame:0000000000000497                 db  0Dh
.eh_frame:0000000000000498                 db    6
.eh_frame:0000000000000499                 db    2
.eh_frame:000000000000049A                 db  44h ; D
.eh_frame:000000000000049B                 db  0Ch
.eh_frame:000000000000049C                 db    7
.eh_frame:000000000000049D                 db    8
.eh_frame:000000000000049E                 db    0
.eh_frame:000000000000049F                 db    0
.eh_frame:00000000000004A0                 db  1Ch
.eh_frame:00000000000004A1                 db    0
.eh_frame:00000000000004A2                 db    0
.eh_frame:00000000000004A3                 db    0
.eh_frame:00000000000004A4                 db  7Ch ; |
.eh_frame:00000000000004A5                 db    0
.eh_frame:00000000000004A6                 db    0
.eh_frame:00000000000004A7                 db    0
.eh_frame:00000000000004A8                 dd offset _GLOBAL__sub_I__Z11DisplayMenuv - $
.eh_frame:00000000000004AC                 db  15h
.eh_frame:00000000000004AD                 db    0
.eh_frame:00000000000004AE                 db    0
.eh_frame:00000000000004AF                 db    0
.eh_frame:00000000000004B0                 db    0
.eh_frame:00000000000004B1                 db  41h ; A
.eh_frame:00000000000004B2                 db  0Eh
.eh_frame:00000000000004B3                 db  10h
.eh_frame:00000000000004B4                 db  86h
.eh_frame:00000000000004B5                 db    2
.eh_frame:00000000000004B6                 db  43h ; C
.eh_frame:00000000000004B7                 db  0Dh
.eh_frame:00000000000004B8                 db    6
.eh_frame:00000000000004B9                 db  50h ; P
.eh_frame:00000000000004BA                 db  0Ch
.eh_frame:00000000000004BB                 db    7
.eh_frame:00000000000004BC                 db    8
.eh_frame:00000000000004BD                 db    0
.eh_frame:00000000000004BE                 db    0
.eh_frame:00000000000004BF                 db    0
.eh_frame:00000000000004BF _eh_frame       ends
.eh_frame:00000000000004BF
extern:00000000000004C0 ; ===========================================================================
extern:00000000000004C0
extern:00000000000004C0 ; Segment type: Externs
extern:00000000000004C0 ; extern
extern:00000000000004C0 ; std::cout
extern:00000000000004C0                 extrn _ZSt4cout         ; DATA XREF: DisplayMenu(void)+B↑o
extern:00000000000004C0                                         ; DisplayMenu(void)+1E↑o ...
extern:00000000000004C8 ; std::ostream & std::operator<<<std::char_traits<char>>(std::ostream &, char const*)
extern:00000000000004C8                 extrn _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc:near
extern:00000000000004C8                                         ; CODE XREF: DisplayMenu(void)+12↑p
extern:00000000000004C8                                         ; DisplayMenu(void)+25↑p ...
extern:00000000000004D0 ; std::cin
extern:00000000000004D0                 extrn _ZSt3cin          ; DATA XREF: main+A3↑o
extern:00000000000004D0                                         ; main+C2↑o ...
extern:00000000000004D8 ; std::istream::operator>>(int &)
extern:00000000000004D8                 extrn _ZNSirsERi:near   ; CODE XREF: main+AA↑p
extern:00000000000004D8                                         ; main+C9↑p ...
extern:00000000000004E0 ; std::ostream::operator<<(int)
extern:00000000000004E0                 extrn _ZNSolsEi:near    ; CODE XREF: main+EC↑p
extern:00000000000004E0                                         ; main+10B↑p ...
extern:00000000000004E8 ; std::ostream & std::endl<char, std::char_traits<char>>(std::ostream &)
extern:00000000000004E8                 extrn _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
extern:00000000000004E8                                         ; DATA XREF: main+139↑o
extern:00000000000004E8                                         ; main+1D8↑o ...
extern:00000000000004F0 ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
extern:00000000000004F0                 extrn _ZNSolsEPFRSoS_E:near
extern:00000000000004F0                                         ; CODE XREF: main+146↑p
extern:00000000000004F0                                         ; main+1E5↑p ...
extern:00000000000004F8                 extrn __stack_chk_fail:near
extern:00000000000004F8                                         ; CODE XREF: main+2A3↑p
extern:0000000000000500 ; _QWORD std::ios_base::Init::Init(std::ios_base::Init *__hidden this)
extern:0000000000000500                 extrn _ZNSt8ios_base4InitC1Ev:near
extern:0000000000000500                                         ; CODE XREF: __static_initialization_and_destruction_0(int,int)+24↑p
extern:0000000000000508                 extrn __dso_handle      ; DATA XREF: __static_initialization_and_destruction_0(int,int)+29↑o
extern:0000000000000510 ; void std::ios_base::Init::~Init(void *)
extern:0000000000000510                 extrn _ZNSt8ios_base4InitD1Ev
extern:0000000000000510                                         ; DATA XREF: __static_initialization_and_destruction_0(int,int)+37↑o
extern:0000000000000518 ; int _cxa_atexit(void (*lpfunc)(void *), void *obj, void *lpdso_handle)
extern:0000000000000518                 extrn __cxa_atexit:near ; CODE XREF: __static_initialization_and_destruction_0(int,int)+41↑p
extern:0000000000000518
extern:0000000000000518
extern:0000000000000518                 end