LOAD:0000555555554000 ;
LOAD:0000555555554000 ; +-------------------------------------------------------------------------+
LOAD:0000555555554000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
LOAD:0000555555554000 ; |           Copyright (c) 2024 Hex-Rays, <support@hex-rays.com>           |
LOAD:0000555555554000 ; |                            Freeware version                             |
LOAD:0000555555554000 ; +-------------------------------------------------------------------------+
LOAD:0000555555554000 ;
LOAD:0000555555554000 ; Input SHA256 : 68A1FC4D1DBD00F965454FEEAE8C5CC752A13D3192C2217837E98C73B8C7F9DC
LOAD:0000555555554000 ; Input MD5    : 0E850B3849B5E84D8CF4E0C57C7106E4
LOAD:0000555555554000 ; Input CRC32  : 9A9FE022
LOAD:0000555555554000 ; Compiler     : GNU C++
LOAD:0000555555554000
LOAD:0000555555554000 ; File Name   : /home/moe/Desktop/reverse-engineering/Week 05/BINARY
LOAD:0000555555554000 ; Format      : ELF64 for x86-64 (Shared object)
LOAD:0000555555554000 ; Interpreter '/lib64/ld-linux-x86-64.so.2'
LOAD:0000555555554000 ; Needed Library 'libstdc++.so.6'
LOAD:0000555555554000 ; Needed Library 'libgcc_s.so.1'
LOAD:0000555555554000 ; Needed Library 'libc.so.6'
LOAD:0000555555554000 ;
LOAD:0000555555554000 ; Source File : 'Scrt1.o'
LOAD:0000555555554000 ; Source File : 'crtstuff.c'
LOAD:0000555555554000 ; Source File : 'Project1.cpp'
LOAD:0000555555554000 ; Source File : 'crtstuff.c'
LOAD:0000555555554000
LOAD:0000555555554000 .686p
LOAD:0000555555554000 .mmx
LOAD:0000555555554000 .model flat
LOAD:0000555555554000 .intel_syntax noprefix
LOAD:0000555555554000
LOAD:0000555555554000 ; ===========================================================================
LOAD:0000555555554000
LOAD:0000555555554000 ; Segment type: Pure data
LOAD:0000555555554000 ; Segment permissions: Read
LOAD:0000555555554000 LOAD segment mempage public 'DATA' use64
LOAD:0000555555554000 assume cs:LOAD
LOAD:0000555555554000 ;org 555555554000h
LOAD:0000555555554000 dd 464C457Fh                            ; File format: \x7FELF
LOAD:0000555555554004 db 2                                    ; File class: 64-bit
LOAD:0000555555554005 db 1                                    ; Data encoding: little-endian
LOAD:0000555555554006 db 1                                    ; File version
LOAD:0000555555554007 db 0                                    ; OS/ABI: UNIX System V ABI
LOAD:0000555555554008 db 0                                    ; ABI Version
LOAD:0000555555554009 db 7 dup(0)                             ; Padding
LOAD:0000555555554010 dw 3                                    ; File type: Shared object
LOAD:0000555555554012 dw 3Eh                                  ; Machine: x86-64
LOAD:0000555555554014 dd 1                                    ; File version
LOAD:0000555555554018 dq 1130h                                ; Entry point
LOAD:0000555555554020 dq 40h                                  ; PHT file offset
LOAD:0000555555554028 dq 4018h                                ; SHT file offset
LOAD:0000555555554030 dd 0                                    ; Processor-specific flags
LOAD:0000555555554034 dw 40h                                  ; ELF header size
LOAD:0000555555554036 dw 38h                                  ; PHT entry size
LOAD:0000555555554038 dw 0Dh                                  ; Number of entries in PHT
LOAD:000055555555403A dw 40h                                  ; SHT entry size
LOAD:000055555555403C dw 1Fh                                  ; Number of entries in SHT
LOAD:000055555555403E dw 1Eh                                  ; SHT entry index for string table
LOAD:0000555555554040 ; ELF64 Program Header
LOAD:0000555555554040 ; PHT Entry 0
LOAD:0000555555554040 dd 6                                    ; Type: PHDR
LOAD:0000555555554044 dd 4                                    ; Flags
LOAD:0000555555554048 dq 40h                                  ; File offset
LOAD:0000555555554050 dq 40h                                  ; Virtual address
LOAD:0000555555554058 dq 40h                                  ; Physical address
LOAD:0000555555554060 dq 2D8h                                 ; Size in file image
LOAD:0000555555554068 dq 2D8h                                 ; Size in memory image
LOAD:0000555555554070 dq 8                                    ; Alignment
LOAD:0000555555554078 ; PHT Entry 1
LOAD:0000555555554078 dd 3                                    ; Type: INTERP
LOAD:000055555555407C dd 4                                    ; Flags
LOAD:0000555555554080 dq 318h                                 ; File offset
LOAD:0000555555554088 dq 318h                                 ; Virtual address
LOAD:0000555555554090 dq 318h                                 ; Physical address
LOAD:0000555555554098 dq 1Ch                                  ; Size in file image
LOAD:00005555555540A0 dq 1Ch                                  ; Size in memory image
LOAD:00005555555540A8 dq 1                                    ; Alignment
LOAD:00005555555540B0 ; PHT Entry 2
LOAD:00005555555540B0 dd 1                                    ; Type: LOAD
LOAD:00005555555540B4 dd 4                                    ; Flags
LOAD:00005555555540B8 dq 0                                    ; File offset
LOAD:00005555555540C0 dq 0                                    ; Virtual address
LOAD:00005555555540C8 dq 0                                    ; Physical address
LOAD:00005555555540D0 dq 0D40h                                ; Size in file image
LOAD:00005555555540D8 dq 0D40h                                ; Size in memory image
LOAD:00005555555540E0 dq 1000h                                ; Alignment
LOAD:00005555555540E8 ; PHT Entry 3
LOAD:00005555555540E8 dd 1                                    ; Type: LOAD
LOAD:00005555555540EC dd 5                                    ; Flags
LOAD:00005555555540F0 dq 1000h                                ; File offset
LOAD:00005555555540F8 dq 1000h                                ; Virtual address
LOAD:0000555555554100 dq 1000h                                ; Physical address
LOAD:0000555555554108 dq 781h                                 ; Size in file image
LOAD:0000555555554110 dq 781h                                 ; Size in memory image
LOAD:0000555555554118 dq 1000h                                ; Alignment
LOAD:0000555555554120 ; PHT Entry 4
LOAD:0000555555554120 dd 1                                    ; Type: LOAD
LOAD:0000555555554124 dd 4                                    ; Flags
LOAD:0000555555554128 dq 2000h                                ; File offset
LOAD:0000555555554130 dq 2000h                                ; Virtual address
LOAD:0000555555554138 dq 2000h                                ; Physical address
LOAD:0000555555554140 dq 3E7h                                 ; Size in file image
LOAD:0000555555554148 dq 3E7h                                 ; Size in memory image
LOAD:0000555555554150 dq 1000h                                ; Alignment
LOAD:0000555555554158 ; PHT Entry 5
LOAD:0000555555554158 dd 1                                    ; Type: LOAD
LOAD:000055555555415C dd 6                                    ; Flags
LOAD:0000555555554160 dq 2D10h                                ; File offset
LOAD:0000555555554168 dq 3D10h                                ; Virtual address
LOAD:0000555555554170 dq 3D10h                                ; Physical address
LOAD:0000555555554178 dq 390h                                 ; Size in file image
LOAD:0000555555554180 dq 618h                                 ; Size in memory image
LOAD:0000555555554188 dq 1000h                                ; Alignment
LOAD:0000555555554190 ; PHT Entry 6
LOAD:0000555555554190 dd 2                                    ; Type: DYNAMIC
LOAD:0000555555554194 dd 6                                    ; Flags
LOAD:0000555555554198 dq 2D28h                                ; File offset
LOAD:00005555555541A0 dq 3D28h                                ; Virtual address
LOAD:00005555555541A8 dq 3D28h                                ; Physical address
LOAD:00005555555541B0 dq 210h                                 ; Size in file image
LOAD:00005555555541B8 dq 210h                                 ; Size in memory image
LOAD:00005555555541C0 dq 8                                    ; Alignment
LOAD:00005555555541C8 ; PHT Entry 7
LOAD:00005555555541C8 dd 4                                    ; Type: NOTE
LOAD:00005555555541CC dd 4                                    ; Flags
LOAD:00005555555541D0 dq 338h                                 ; File offset
LOAD:00005555555541D8 dq 338h                                 ; Virtual address
LOAD:00005555555541E0 dq 338h                                 ; Physical address
LOAD:00005555555541E8 dq 20h                                  ; Size in file image
LOAD:00005555555541F0 dq 20h                                  ; Size in memory image
LOAD:00005555555541F8 dq 8                                    ; Alignment
LOAD:0000555555554200 ; PHT Entry 8
LOAD:0000555555554200 dd 4                                    ; Type: NOTE
LOAD:0000555555554204 dd 4                                    ; Flags
LOAD:0000555555554208 dq 358h                                 ; File offset
LOAD:0000555555554210 dq 358h                                 ; Virtual address
LOAD:0000555555554218 dq 358h                                 ; Physical address
LOAD:0000555555554220 dq 44h                                  ; Size in file image
LOAD:0000555555554228 dq 44h                                  ; Size in memory image
LOAD:0000555555554230 dq 4                                    ; Alignment
LOAD:0000555555554238 ; PHT Entry 9
LOAD:0000555555554238 dd 6474E553h                            ; Type: 6474E553
LOAD:000055555555423C dd 4                                    ; Flags
LOAD:0000555555554240 dq 338h                                 ; File offset
LOAD:0000555555554248 dq 338h                                 ; Virtual address
LOAD:0000555555554250 dq 338h                                 ; Physical address
LOAD:0000555555554258 dq 20h                                  ; Size in file image
LOAD:0000555555554260 dq 20h                                  ; Size in memory image
LOAD:0000555555554268 dq 8                                    ; Alignment
LOAD:0000555555554270 ; PHT Entry 10
LOAD:0000555555554270 dd 6474E550h                            ; Type: EH_FRAME
LOAD:0000555555554274 dd 4                                    ; Flags
LOAD:0000555555554278 dq 2220h                                ; File offset
LOAD:0000555555554280 dq 2220h                                ; Virtual address
LOAD:0000555555554288 dq 2220h                                ; Physical address
LOAD:0000555555554290 dq 54h                                  ; Size in file image
LOAD:0000555555554298 dq 54h                                  ; Size in memory image
LOAD:00005555555542A0 dq 4                                    ; Alignment
LOAD:00005555555542A8 ; PHT Entry 11
LOAD:00005555555542A8 dd 6474E551h                            ; Type: STACK
LOAD:00005555555542AC dd 6                                    ; Flags
LOAD:00005555555542B0 dq 0                                    ; File offset
LOAD:00005555555542B8 dq 0                                    ; Virtual address
LOAD:00005555555542C0 dq 0                                    ; Physical address
LOAD:00005555555542C8 dq 0                                    ; Size in file image
LOAD:00005555555542D0 dq 0                                    ; Size in memory image
LOAD:00005555555542D8 dq 10h                                  ; Alignment
LOAD:00005555555542E0 ; PHT Entry 12
LOAD:00005555555542E0 dd 6474E552h                            ; Type: RO-AFTER
LOAD:00005555555542E4 dd 4                                    ; Flags
LOAD:00005555555542E8 dq 2D10h                                ; File offset
LOAD:00005555555542F0 dq 3D10h                                ; Virtual address
LOAD:00005555555542F8 dq 3D10h                                ; Physical address
LOAD:0000555555554300 dq 2F0h                                 ; Size in file image
LOAD:0000555555554308 dq 2F0h                                 ; Size in memory image
LOAD:0000555555554310 dq 1                                    ; Alignment
LOAD:0000555555554318 aLib64LdLinuxX8 db '/lib64/ld-linux-x86-64.so.2',0
LOAD:0000555555554334 align 8
LOAD:0000555555554338 ; ELF Note Entry
LOAD:0000555555554338 dd 4                                    ; Name Size
LOAD:000055555555433C dd 10h                                  ; Desc Size
LOAD:0000555555554340 dd 5                                    ; Type: NT_GNU_PROPERTY_TYPE_0
LOAD:0000555555554344 aGnu db 'GNU',0                         ; Name
LOAD:0000555555554348 db 2, 80h, 0, 0C0h, 4, 3 dup(0), 1, 7 dup(0) ; Desc
LOAD:0000555555554358 ; ELF Note Entry
LOAD:0000555555554358 dd 4                                    ; Name Size
LOAD:000055555555435C dd 14h                                  ; Desc Size
LOAD:0000555555554360 dd 3                                    ; Type: NT_GNU_BUILD_ID
LOAD:0000555555554364 aGnu_0 db 'GNU',0                       ; Name
LOAD:0000555555554368 db 94h, 62h, 0, 0ACh, 99h, 0D7h, 98h, 0F7h, 9Fh, 93h, 0C1h, 0Eh, 19h, 5 ; Desc
LOAD:0000555555554376 db 0BAh, 5Fh, 76h, 80h, 0A8h, 62h
LOAD:000055555555437C ; ELF Note Entry
LOAD:000055555555437C __abi_tag dd 4                          ; Name Size
LOAD:0000555555554380 dd 10h                                  ; Desc Size
LOAD:0000555555554384 dd 1                                    ; Type: NT_GNU_ABI_TAG
LOAD:0000555555554388 aGnu_1 db 'GNU',0                       ; Name
LOAD:000055555555438C dd 0, 3, 2, 0                           ; ABI: Linux 3.2.0
LOAD:000055555555439C align 20h
LOAD:00005555555543A0 ; ELF GNU Hash Table
LOAD:00005555555543A0 elf_gnu_hash_nbuckets dd 3
LOAD:00005555555543A4 elf_gnu_hash_symbias dd 17h
LOAD:00005555555543A8 elf_gnu_hash_bitmask_nwords dd 1
LOAD:00005555555543AC elf_gnu_hash_shift dd 6
LOAD:00005555555543B0 elf_gnu_hash_indexes dq 4000102910000h
LOAD:00005555555543B8 elf_gnu_hash_bucket dd 17h, 0, 19h
LOAD:00005555555543C4 elf_gnu_hash_chain dd 6DCE65D0h, 2079673h, 430C9815h
LOAD:00005555555543D0 ; ELF Symbol Table
LOAD:00005555555543D0 Elf64_Sym <0>
LOAD:00005555555543E8 Elf64_Sym <offset aZstrsicst11cha - offset unk_555555554640, 12h, 0, \ ; "_ZStrsIcSt11char_traitsIcEERSt13basic_i"...
LOAD:00005555555543E8            0, 0, 0>
LOAD:0000555555554400 Elf64_Sym <offset aZnkst7Cxx1112b - offset unk_555555554640, 12h, 0, \ ; "_ZNKSt7__cxx1112basic_stringIcSt11char_"...
LOAD:0000555555554400            0, 0, 0>
LOAD:0000555555554418 Elf64_Sym <offset aZst4endlicst11 - offset unk_555555554640, 12h, 0, \ ; "_ZSt4endlIcSt11char_traitsIcEERSt13basi"...
LOAD:0000555555554418            0, 0, 0>
LOAD:0000555555554430 Elf64_Sym <offset aZnsirseri - offset unk_555555554640, 12h, 0, 0, 0, \ ; "_ZNSirsERi"
LOAD:0000555555554430            0>
LOAD:0000555555554448 Elf64_Sym <offset aZnst7Cxx1112ba_0 - offset unk_555555554640, 12h, 0,\ ; "_ZNSt7__cxx1112basic_stringIcSt11char_t"...
LOAD:0000555555554448            0, 0, 0>
LOAD:0000555555554460 Elf64_Sym <offset aLibcStartMain - offset unk_555555554640, 12h, 0, 0,\ ; "__libc_start_main"
LOAD:0000555555554460            0, 0>
LOAD:0000555555554478 Elf64_Sym <offset aCxaAtexit - offset unk_555555554640, 12h, 0, 0, 0, \ ; "__cxa_atexit"
LOAD:0000555555554478            0>
LOAD:0000555555554490 Elf64_Sym <offset aZstlsist11char - offset unk_555555554640, 12h, 0, \ ; "_ZStlsISt11char_traitsIcEERSt13basic_os"...
LOAD:0000555555554490            0, 0, 0>
LOAD:00005555555544A8 Elf64_Sym <offset aZnsolsepfrsosE - offset unk_555555554640, 12h, 0, \ ; "_ZNSolsEPFRSoS_E"
LOAD:00005555555544A8            0, 0, 0>
LOAD:00005555555544C0 Elf64_Sym <offset aZnsaiced1ev - offset unk_555555554640, 12h, 0, 0, \ ; "_ZNSaIcED1Ev"
LOAD:00005555555544C0            0, 0>
LOAD:00005555555544D8 Elf64_Sym <offset aStackChkFail - offset unk_555555554640, 12h, 0, 0, \ ; "__stack_chk_fail"
LOAD:00005555555544D8            0, 0>
LOAD:00005555555544F0 Elf64_Sym <offset aZstrsicst11cha_0 - offset unk_555555554640, 12h, 0,\ ; "_ZStrsIcSt11char_traitsIcESaIcEERSt13ba"...
LOAD:00005555555544F0            0, 0, 0>
LOAD:0000555555554508 Elf64_Sym <offset aZnst7Cxx1112ba - offset unk_555555554640, 12h, 0, \ ; "_ZNSt7__cxx1112basic_stringIcSt11char_t"...
LOAD:0000555555554508            0, 0, 0>
LOAD:0000555555554520 Elf64_Sym <offset aZnst8iosBase4i_0 - offset unk_555555554640, 12h, 0,\ ; "_ZNSt8ios_base4InitC1Ev"
LOAD:0000555555554520            0, 0, 0>
LOAD:0000555555554538 Elf64_Sym <offset aGxxPersonality - offset unk_555555554640, 12h, 0, \ ; "__gxx_personality_v0"
LOAD:0000555555554538            0, 0, 0>
LOAD:0000555555554550 Elf64_Sym <offset aZnsolsei - offset unk_555555554640, 12h, 0, 0, 0, \ ; "_ZNSolsEi"
LOAD:0000555555554550            0>
LOAD:0000555555554568 Elf64_Sym <offset aItmDeregistert - offset unk_555555554640, 20h, 0, \ ; "_ITM_deregisterTMCloneTable"
LOAD:0000555555554568            0, 0, 0>
LOAD:0000555555554580 Elf64_Sym <offset aUnwindResume - offset unk_555555554640, 12h, 0, 0, \ ; "_Unwind_Resume"
LOAD:0000555555554580            0, 0>
LOAD:0000555555554598 Elf64_Sym <offset aZnsaicec1ev - offset unk_555555554640, 12h, 0, 0, \ ; "_ZNSaIcEC1Ev"
LOAD:0000555555554598            0, 0>
LOAD:00005555555545B0 Elf64_Sym <offset aGmonStart - offset unk_555555554640, 20h, 0, 0, 0, \ ; "__gmon_start__"
LOAD:00005555555545B0            0>
LOAD:00005555555545C8 Elf64_Sym <offset aItmRegistertmc - offset unk_555555554640, 20h, 0, \ ; "_ITM_registerTMCloneTable"
LOAD:00005555555545C8            0, 0, 0>
LOAD:00005555555545E0 Elf64_Sym <offset aZnst8iosBase4i - offset unk_555555554640, 12h, 0, \ ; "_ZNSt8ios_base4InitD1Ev"
LOAD:00005555555545E0            0, 0, 0>
LOAD:00005555555545F8 Elf64_Sym <offset aCxaFinalize - offset unk_555555554640, 22h, 0, 0, \ ; "__cxa_finalize"
LOAD:00005555555545F8            0, 0>
LOAD:0000555555554610 Elf64_Sym <offset aZst3cin - offset unk_555555554640, 11h, 0, 1Ah, \ ; "_ZSt3cin"
LOAD:0000555555554610            41E0h, 118h>
LOAD:0000555555554628 Elf64_Sym <offset aZst4cout - offset unk_555555554640, 11h, 0, 1Ah, \ ; "_ZSt4cout"
LOAD:0000555555554628            40C0h, 110h>
LOAD:0000555555554640 ; ELF String Table
LOAD:0000555555554640 unk_555555554640 db    0                ; DATA XREF: LOAD:00005555555549F8↓o
LOAD:0000555555554640                                         ; LOAD:0000555555554A18↓o ...
LOAD:0000555555554641 aGmonStart db '__gmon_start__',0
LOAD:0000555555554650 aItmDeregistert db '_ITM_deregisterTMCloneTable',0
LOAD:000055555555466C aItmRegistertmc db '_ITM_registerTMCloneTable',0
LOAD:0000555555554686 aZnkst7Cxx1112b db '_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPK'
LOAD:00005555555546C7 db 'c',0
LOAD:00005555555546C9 aZnsirseri db '_ZNSirsERi',0
LOAD:00005555555546D4 aZnsolsei db '_ZNSolsEi',0
LOAD:00005555555546DE aZnsaiced1ev db '_ZNSaIcED1Ev',0
LOAD:00005555555546EB aZst4endlicst11 db '_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_',0
LOAD:0000555555554726 aZst3cin db '_ZSt3cin',0
LOAD:000055555555472F aZnst7Cxx1112ba db '_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_',0
LOAD:0000555555554770 aZnst8iosBase4i db '_ZNSt8ios_base4InitD1Ev',0
LOAD:0000555555554788 aZnsolsepfrsosE db '_ZNSolsEPFRSoS_E',0
LOAD:0000555555554799 aGxxPersonality db '__gxx_personality_v0',0
LOAD:00005555555547AE aZnsaicec1ev db '_ZNSaIcEC1Ev',0
LOAD:00005555555547BB aZstlsist11char db '_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc',0
LOAD:00005555555547F3 aZnst8iosBase4i_0 db '_ZNSt8ios_base4InitC1Ev',0
LOAD:000055555555480B aZnst7Cxx1112ba_0 db '_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev',0
LOAD:0000555555554845 aZstrsicst11cha db '_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_PS3_',0
LOAD:0000555555554881 aZst4cout db '_ZSt4cout',0
LOAD:000055555555488B aZstrsicst11cha_0 db '_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7'
LOAD:00005555555548CC db '__cxx1112basic_stringIS4_S5_T1_EE',0
LOAD:00005555555548EE aUnwindResume db '_Unwind_Resume',0
LOAD:00005555555548FD aStackChkFail db '__stack_chk_fail',0
LOAD:000055555555490E aCxaAtexit db '__cxa_atexit',0
LOAD:000055555555491B aLibcStartMain db '__libc_start_main',0
LOAD:000055555555492D aCxaFinalize db '__cxa_finalize',0
LOAD:000055555555493C aLibstdcSo6 db 'libstdc++.so.6',0
LOAD:000055555555494B aLibgccSSo1 db 'libgcc_s.so.1',0
LOAD:0000555555554959 aLibcSo6 db 'libc.so.6',0
LOAD:0000555555554963 aGcc30 db 'GCC_3.0',0                   ; DATA XREF: LOAD:00005555555549F8↓o
LOAD:000055555555496B aGlibc24 db 'GLIBC_2.4',0               ; DATA XREF: LOAD:0000555555554A18↓o
LOAD:0000555555554975 aGlibc234 db 'GLIBC_2.34',0             ; DATA XREF: LOAD:0000555555554A28↓o
LOAD:0000555555554980 aGlibc225 db 'GLIBC_2.2.5',0            ; DATA XREF: LOAD:0000555555554A38↓o
LOAD:000055555555498C aCxxabi13 db 'CXXABI_1.3',0             ; DATA XREF: LOAD:0000555555554A58↓o
LOAD:0000555555554997 aGlibcxx3421 db 'GLIBCXX_3.4.21',0      ; DATA XREF: LOAD:0000555555554A68↓o
LOAD:00005555555549A6 aGlibcxx34 db 'GLIBCXX_3.4',0           ; DATA XREF: LOAD:0000555555554A78↓o
LOAD:00005555555549B2 ; ELF GNU Symbol Version Table
LOAD:00005555555549B2 dw 0
LOAD:00005555555549B4 dw 2                                    ; _ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_PS3_@@GLIBCXX_3.4
LOAD:00005555555549B6 dw 3                                    ; _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@@GLIBCXX_3.4.21
LOAD:00005555555549B8 dw 2                                    ; _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@@GLIBCXX_3.4
LOAD:00005555555549BA dw 2                                    ; _ZNSirsERi@@GLIBCXX_3.4
LOAD:00005555555549BC dw 3                                    ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@@GLIBCXX_3.4.21
LOAD:00005555555549BE dw 5                                    ; __libc_start_main@@GLIBC_2.34
LOAD:00005555555549C0 dw 4                                    ; __cxa_atexit@@GLIBC_2.2.5
LOAD:00005555555549C2 dw 2                                    ; _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@@GLIBCXX_3.4
LOAD:00005555555549C4 dw 2                                    ; _ZNSolsEPFRSoS_E@@GLIBCXX_3.4
LOAD:00005555555549C6 dw 2                                    ; _ZNSaIcED1Ev@@GLIBCXX_3.4
LOAD:00005555555549C8 dw 6                                    ; __stack_chk_fail@@GLIBC_2.4
LOAD:00005555555549CA dw 3                                    ; _ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE@@GLIBCXX_3.4.21
LOAD:00005555555549CC dw 3                                    ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@@GLIBCXX_3.4.21
LOAD:00005555555549CE dw 2                                    ; _ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4
LOAD:00005555555549D0 dw 7                                    ; __gxx_personality_v0@@CXXABI_1.3
LOAD:00005555555549D2 dw 2                                    ; _ZNSolsEi@@GLIBCXX_3.4
LOAD:00005555555549D4 dw 1                                    ; global symbol: _ITM_deregisterTMCloneTable
LOAD:00005555555549D6 dw 8                                    ; _Unwind_Resume@@GCC_3.0
LOAD:00005555555549D8 dw 2                                    ; _ZNSaIcEC1Ev@@GLIBCXX_3.4
LOAD:00005555555549DA dw 1                                    ; global symbol: __gmon_start__
LOAD:00005555555549DC dw 1                                    ; global symbol: _ITM_registerTMCloneTable
LOAD:00005555555549DE dw 2                                    ; _ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4
LOAD:00005555555549E0 dw 4                                    ; __cxa_finalize@@GLIBC_2.2.5
LOAD:00005555555549E2 dw 2                                    ; _ZSt3cin@@GLIBCXX_3.4
LOAD:00005555555549E4 dw 2                                    ; _ZSt4cout@@GLIBCXX_3.4
LOAD:00005555555549E6 dw 0
LOAD:00005555555549E8 ; ELF GNU Symbol Version Requirements
LOAD:00005555555549E8 Elf64_Verneed <1, 1, offset aLibgccSSo1 - offset unk_555555554640, \ ; "libgcc_s.so.1"
LOAD:00005555555549E8                10h, 20h>
LOAD:00005555555549F8 Elf64_Vernaux <0B792650h, 0, 8, \       ; "GCC_3.0"
LOAD:00005555555549F8                offset aGcc30 - offset unk_555555554640, 0>
LOAD:0000555555554A08 Elf64_Verneed <1, 3, offset aLibcSo6 - offset unk_555555554640, 10h, \ ; "libc.so.6"
LOAD:0000555555554A08                40h>
LOAD:0000555555554A18 Elf64_Vernaux <0D696914h, 0, 6, \       ; "GLIBC_2.4"
LOAD:0000555555554A18                offset aGlibc24 - offset unk_555555554640, 10h>
LOAD:0000555555554A28 Elf64_Vernaux <69691B4h, 0, 5, \        ; "GLIBC_2.34"
LOAD:0000555555554A28                offset aGlibc234 - offset unk_555555554640, 10h>
LOAD:0000555555554A38 Elf64_Vernaux <9691A75h, 0, 4, \        ; "GLIBC_2.2.5"
LOAD:0000555555554A38                offset aGlibc225 - offset unk_555555554640, 0>
LOAD:0000555555554A48 Elf64_Verneed <1, 3, offset aLibstdcSo6 - offset unk_555555554640, \ ; "libstdc++.so.6"
LOAD:0000555555554A48                10h, 0>
LOAD:0000555555554A58 Elf64_Vernaux <56BAFD3h, 0, 7, \        ; "CXXABI_1.3"
LOAD:0000555555554A58                offset aCxxabi13 - offset unk_555555554640, 10h>
LOAD:0000555555554A68 Elf64_Vernaux <297F871h, 0, 3, \        ; "GLIBCXX_3.4.21"
LOAD:0000555555554A68                offset aGlibcxx3421 - offset unk_555555554640, 10h>
LOAD:0000555555554A78 Elf64_Vernaux <8922974h, 0, 2, \        ; "GLIBCXX_3.4"
LOAD:0000555555554A78                offset aGlibcxx34 - offset unk_555555554640, 0>
LOAD:0000555555554A88 ; ELF RELA Relocation Table
LOAD:0000555555554A88 Elf64_Rela <3D10h, 8, 1210h>            ; R_X86_64_RELATIVE +1210h
LOAD:0000555555554AA0 Elf64_Rela <3D18h, 8, 175Dh>            ; R_X86_64_RELATIVE +175Dh
LOAD:0000555555554AB8 Elf64_Rela <3D20h, 8, 11D0h>            ; R_X86_64_RELATIVE +11D0h
LOAD:0000555555554AD0 Elf64_Rela <4008h, 8, 4008h>            ; R_X86_64_RELATIVE +4008h
LOAD:0000555555554AE8 Elf64_Rela <3FC8h, 1700000006h, 0>      ; R_X86_64_GLOB_DAT __cxa_finalize
LOAD:0000555555554B00 Elf64_Rela <3FD0h, 300000006h, 0>       ; R_X86_64_GLOB_DAT _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
LOAD:0000555555554B18 Elf64_Rela <3FD8h, 600000006h, 0>       ; R_X86_64_GLOB_DAT __libc_start_main
LOAD:0000555555554B30 Elf64_Rela <3FE0h, 1100000006h, 0>      ; R_X86_64_GLOB_DAT _ITM_deregisterTMCloneTable
LOAD:0000555555554B48 Elf64_Rela <3FE8h, 1400000006h, 0>      ; R_X86_64_GLOB_DAT __gmon_start__
LOAD:0000555555554B60 Elf64_Rela <3FF0h, 1500000006h, 0>      ; R_X86_64_GLOB_DAT _ITM_registerTMCloneTable
LOAD:0000555555554B78 Elf64_Rela <3FF8h, 1600000006h, 0>      ; R_X86_64_GLOB_DAT _ZNSt8ios_base4InitD1Ev
LOAD:0000555555554B90 Elf64_Rela <4098h, 0F00000001h, 0>      ; R_X86_64_64 __gxx_personality_v0
LOAD:0000555555554BA8 Elf64_Rela <40C0h, 1900000005h, 0>      ; R_X86_64_COPY _ZSt4cout
LOAD:0000555555554BC0 Elf64_Rela <41E0h, 1800000005h, 0>      ; R_X86_64_COPY _ZSt3cin
LOAD:0000555555554BD8 ; ELF JMPREL Relocation Table
LOAD:0000555555554BD8 Elf64_Rela <3F50h, 100000007h, 0>       ; R_X86_64_JUMP_SLOT _ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_PS3_
LOAD:0000555555554BF0 Elf64_Rela <3F58h, 200000007h, 0>       ; R_X86_64_JUMP_SLOT _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
LOAD:0000555555554C08 Elf64_Rela <3F60h, 400000007h, 0>       ; R_X86_64_JUMP_SLOT _ZNSirsERi
LOAD:0000555555554C20 Elf64_Rela <3F68h, 500000007h, 0>       ; R_X86_64_JUMP_SLOT _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
LOAD:0000555555554C38 Elf64_Rela <3F70h, 700000007h, 0>       ; R_X86_64_JUMP_SLOT __cxa_atexit
LOAD:0000555555554C50 Elf64_Rela <3F78h, 800000007h, 0>       ; R_X86_64_JUMP_SLOT _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
LOAD:0000555555554C68 Elf64_Rela <3F80h, 900000007h, 0>       ; R_X86_64_JUMP_SLOT _ZNSolsEPFRSoS_E
LOAD:0000555555554C80 Elf64_Rela <3F88h, 0A00000007h, 0>      ; R_X86_64_JUMP_SLOT _ZNSaIcED1Ev
LOAD:0000555555554C98 Elf64_Rela <3F90h, 0B00000007h, 0>      ; R_X86_64_JUMP_SLOT __stack_chk_fail
LOAD:0000555555554CB0 Elf64_Rela <3F98h, 0C00000007h, 0>      ; R_X86_64_JUMP_SLOT _ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE
LOAD:0000555555554CC8 Elf64_Rela <3FA0h, 0D00000007h, 0>      ; R_X86_64_JUMP_SLOT _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
LOAD:0000555555554CE0 Elf64_Rela <3FA8h, 0E00000007h, 0>      ; R_X86_64_JUMP_SLOT _ZNSt8ios_base4InitC1Ev
LOAD:0000555555554CF8 Elf64_Rela <3FB0h, 1000000007h, 0>      ; R_X86_64_JUMP_SLOT _ZNSolsEi
LOAD:0000555555554D10 Elf64_Rela <3FB8h, 1200000007h, 0>      ; R_X86_64_JUMP_SLOT _Unwind_Resume
LOAD:0000555555554D28 Elf64_Rela <3FC0h, 1300000007h, 0>      ; R_X86_64_JUMP_SLOT _ZNSaIcEC1Ev
LOAD:0000555555554D28 LOAD ends
LOAD:0000555555554D28
.init:0000555555555000 ; ===========================================================================
.init:0000555555555000
.init:0000555555555000 ; Segment type: Pure code
.init:0000555555555000 ; Segment permissions: Read/Execute
.init:0000555555555000 _init segment dword public 'CODE' use64
.init:0000555555555000 assume cs:_init
.init:0000555555555000 ;org 555555555000h
.init:0000555555555000 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.init:0000555555555000
.init:0000555555555000 ; =============== S U B R O U T I N E =======================================
.init:0000555555555000
.init:0000555555555000
.init:0000555555555000 public _init_proc
.init:0000555555555000 _init_proc proc near
.init:0000555555555000 endbr64                                 ; _init
.init:0000555555555004 sub     rsp, 8
.init:0000555555555008 mov     rax, cs:__gmon_start___ptr
.init:000055555555500F test    rax, rax
.init:0000555555555012 jz      short loc_555555555016
.init:0000555555555014 call    rax ; __gmon_start__
.init:0000555555555016
.init:0000555555555016 loc_555555555016:                       ; CODE XREF: _init_proc+12↑j
.init:0000555555555016 add     rsp, 8
.init:000055555555501A retn
.init:000055555555501A _init_proc endp
.init:000055555555501A
.init:000055555555501A _init ends
.init:000055555555501A
LOAD:000055555555501B ; ===========================================================================
LOAD:000055555555501B
LOAD:000055555555501B ; Segment type: Pure code
LOAD:000055555555501B ; Segment permissions: Read/Execute
LOAD:000055555555501B LOAD segment mempage public 'CODE' use64
LOAD:000055555555501B assume cs:LOAD
LOAD:000055555555501B ;org 55555555501Bh
LOAD:000055555555501B assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:000055555555501B align 20h
LOAD:000055555555501B LOAD ends
LOAD:000055555555501B
.plt:0000555555555020 ; ===========================================================================
.plt:0000555555555020
.plt:0000555555555020 ; Segment type: Pure code
.plt:0000555555555020 ; Segment permissions: Read/Execute
.plt:0000555555555020 _plt segment para public 'CODE' use64
.plt:0000555555555020 assume cs:_plt
.plt:0000555555555020 ;org 555555555020h
.plt:0000555555555020 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.plt:0000555555555020
.plt:0000555555555020 ; =============== S U B R O U T I N E =======================================
.plt:0000555555555020
.plt:0000555555555020
.plt:0000555555555020 sub_555555555020 proc near              ; CODE XREF: .plt:000055555555503B↓j
.plt:0000555555555020                                         ; .plt:000055555555504B↓j ...
.plt:0000555555555020 ; __unwind { // 555555554000
.plt:0000555555555020 push    cs:qword_555555557F40
.plt:0000555555555026 jmp     cs:qword_555555557F48
.plt:0000555555555026 sub_555555555020 endp
.plt:0000555555555026
.plt:0000555555555026 ; ---------------------------------------------------------------------------
.plt:000055555555502C align 10h
.plt:0000555555555030 ; [00000006 BYTES: COLLAPSED FUNCTION std::operator>><char,std::char_traits<char>>(std::istream &,char*)]
.plt:0000555555555036 ; ---------------------------------------------------------------------------
.plt:0000555555555036 push    0
.plt:000055555555503B jmp     sub_555555555020
.plt:0000555555555040 ; [00000006 BYTES: COLLAPSED FUNCTION std::string::compare(char const*)]
.plt:0000555555555046 ; ---------------------------------------------------------------------------
.plt:0000555555555046 push    1
.plt:000055555555504B jmp     sub_555555555020
.plt:0000555555555050 ; [00000006 BYTES: COLLAPSED FUNCTION std::istream::operator>>(int &)]
.plt:0000555555555056 ; ---------------------------------------------------------------------------
.plt:0000555555555056 push    2
.plt:000055555555505B jmp     sub_555555555020
.plt:0000555555555060 ; [00000006 BYTES: COLLAPSED FUNCTION std::string::~string()]
.plt:0000555555555066 ; ---------------------------------------------------------------------------
.plt:0000555555555066 push    3
.plt:000055555555506B jmp     sub_555555555020
.plt:0000555555555070 ; [00000006 BYTES: COLLAPSED FUNCTION ___cxa_atexit]
.plt:0000555555555076 ; ---------------------------------------------------------------------------
.plt:0000555555555076 push    4
.plt:000055555555507B jmp     sub_555555555020
.plt:0000555555555080 ; [00000006 BYTES: COLLAPSED FUNCTION std::operator<<<std::char_traits<char>>(std::ostream &,char const*)]
.plt:0000555555555086 ; ---------------------------------------------------------------------------
.plt:0000555555555086 push    5
.plt:000055555555508B jmp     sub_555555555020
.plt:0000555555555090 ; [00000006 BYTES: COLLAPSED FUNCTION std::ostream::operator<<(std::ostream & (*)(std::ostream &))]
.plt:0000555555555096 ; ---------------------------------------------------------------------------
.plt:0000555555555096 push    6
.plt:000055555555509B jmp     sub_555555555020
.plt:00005555555550A0 ; [00000006 BYTES: COLLAPSED FUNCTION std::allocator<char>::~allocator()]
.plt:00005555555550A6 ; ---------------------------------------------------------------------------
.plt:00005555555550A6 push    7
.plt:00005555555550AB jmp     sub_555555555020
.plt:00005555555550B0 ; [00000006 BYTES: COLLAPSED FUNCTION ___stack_chk_fail]
.plt:00005555555550B6 ; ---------------------------------------------------------------------------
.plt:00005555555550B6 push    8
.plt:00005555555550BB jmp     sub_555555555020
.plt:00005555555550C0 ; [00000006 BYTES: COLLAPSED FUNCTION std::operator>><char>(std::istream &,std::string &)]
.plt:00005555555550C6 ; ---------------------------------------------------------------------------
.plt:00005555555550C6 push    9
.plt:00005555555550CB jmp     sub_555555555020
.plt:00005555555550D0 ; [00000006 BYTES: COLLAPSED FUNCTION std::string::basic_string(char const*,std::allocator<char> const&)]
.plt:00005555555550D6 ; ---------------------------------------------------------------------------
.plt:00005555555550D6 push    0Ah
.plt:00005555555550DB jmp     sub_555555555020
.plt:00005555555550E0 ; [00000006 BYTES: COLLAPSED FUNCTION std::ios_base::Init::Init(void)]
.plt:00005555555550E6 ; ---------------------------------------------------------------------------
.plt:00005555555550E6 push    0Bh
.plt:00005555555550EB jmp     sub_555555555020
.plt:00005555555550F0 ; [00000006 BYTES: COLLAPSED FUNCTION std::ostream::operator<<(int)]
.plt:00005555555550F6 ; ---------------------------------------------------------------------------
.plt:00005555555550F6 push    0Ch
.plt:00005555555550FB jmp     sub_555555555020
.plt:0000555555555100 ; [00000006 BYTES: COLLAPSED FUNCTION __Unwind_Resume]
.plt:0000555555555106 ; ---------------------------------------------------------------------------
.plt:0000555555555106 push    0Dh
.plt:000055555555510B jmp     sub_555555555020
.plt:0000555555555110 ; [00000006 BYTES: COLLAPSED FUNCTION std::allocator<char>::allocator(void)]
.plt:0000555555555116 ; ---------------------------------------------------------------------------
.plt:0000555555555116 push    0Eh
.plt:000055555555511B jmp     sub_555555555020
.plt:000055555555511B ; } // starts at 555555555020
.plt:000055555555511B _plt ends
.plt:000055555555511B
.plt.got:0000555555555120 ; ===========================================================================
.plt.got:0000555555555120
.plt.got:0000555555555120 ; Segment type: Pure code
.plt.got:0000555555555120 ; Segment permissions: Read/Execute
.plt.got:0000555555555120 _plt_got segment qword public 'CODE' use64
.plt.got:0000555555555120 assume cs:_plt_got
.plt.got:0000555555555120 ;org 555555555120h
.plt.got:0000555555555120 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.plt.got:0000555555555120 ; [00000006 BYTES: COLLAPSED FUNCTION __cxa_finalize]
.plt.got:0000555555555126 align 8
.plt.got:0000555555555126 ; } // starts at 555555555120
.plt.got:0000555555555126 _plt_got ends
.plt.got:0000555555555126
LOAD:0000555555555128 ; ===========================================================================
LOAD:0000555555555128
LOAD:0000555555555128 ; Segment type: Pure code
LOAD:0000555555555128 ; Segment permissions: Read/Execute
LOAD:0000555555555128 LOAD segment mempage public 'CODE' use64
LOAD:0000555555555128 assume cs:LOAD
LOAD:0000555555555128 ;org 555555555128h
LOAD:0000555555555128 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000555555555128 align 10h
LOAD:0000555555555128 LOAD ends
LOAD:0000555555555128
.text:0000555555555130 ; ===========================================================================
.text:0000555555555130
.text:0000555555555130 ; Segment type: Pure code
.text:0000555555555130 ; Segment permissions: Read/Execute
.text:0000555555555130 _text segment para public 'CODE' use64
.text:0000555555555130 assume cs:_text
.text:0000555555555130 ;org 555555555130h
.text:0000555555555130 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:0000555555555130
.text:0000555555555130 ; =============== S U B R O U T I N E =======================================
.text:0000555555555130
.text:0000555555555130 ; Attributes: noreturn fuzzy-sp
.text:0000555555555130
.text:0000555555555130 public _start
.text:0000555555555130 _start proc near
.text:0000555555555130 ; __unwind { // 555555554000
.text:0000555555555130 endbr64
.text:0000555555555134 xor     ebp, ebp
.text:0000555555555136 mov     r9, rdx                         ; rtld_fini
.text:0000555555555139 pop     rsi                             ; argc
.text:000055555555513A mov     rdx, rsp                        ; ubp_av
.text:000055555555513D and     rsp, 0FFFFFFFFFFFFFFF0h
.text:0000555555555141 push    rax
.text:0000555555555142 push    rsp                             ; stack_end
.text:0000555555555143 xor     r8d, r8d                        ; fini
.text:0000555555555146 xor     ecx, ecx                        ; init
.text:0000555555555148 lea     rdi, main                       ; main
.text:000055555555514F call    cs:__libc_start_main_ptr
.text:0000555555555155 hlt
.text:0000555555555155 ; } // starts at 555555555130
.text:0000555555555155 _start endp
.text:0000555555555155
.text:0000555555555155 ; ---------------------------------------------------------------------------
.text:0000555555555156 align 20h
.text:0000555555555160
.text:0000555555555160 ; =============== S U B R O U T I N E =======================================
.text:0000555555555160
.text:0000555555555160
.text:0000555555555160 deregister_tm_clones proc near          ; CODE XREF: __do_global_dtors_aux:loc_5555555551F7↓p
.text:0000555555555160 lea     rdi, _edata
.text:0000555555555167 lea     rax, _edata
.text:000055555555516E cmp     rax, rdi
.text:0000555555555171 jz      short locret_555555555188
.text:0000555555555173 mov     rax, cs:_ITM_deregisterTMCloneTable_ptr
.text:000055555555517A test    rax, rax
.text:000055555555517D jz      short locret_555555555188
.text:000055555555517F jmp     rax
.text:000055555555517F ; ---------------------------------------------------------------------------
.text:0000555555555181 align 8
.text:0000555555555188
.text:0000555555555188 locret_555555555188:                    ; CODE XREF: deregister_tm_clones+11↑j
.text:0000555555555188                                         ; deregister_tm_clones+1D↑j
.text:0000555555555188 retn
.text:0000555555555188 deregister_tm_clones endp
.text:0000555555555188
.text:0000555555555188 ; ---------------------------------------------------------------------------
.text:0000555555555189 align 10h
.text:0000555555555190
.text:0000555555555190 ; =============== S U B R O U T I N E =======================================
.text:0000555555555190
.text:0000555555555190
.text:0000555555555190 register_tm_clones proc near            ; CODE XREF: frame_dummy+4↓j
.text:0000555555555190 lea     rdi, _edata
.text:0000555555555197 lea     rsi, _edata
.text:000055555555519E sub     rsi, rdi
.text:00005555555551A1 mov     rax, rsi
.text:00005555555551A4 shr     rsi, 3Fh
.text:00005555555551A8 sar     rax, 3
.text:00005555555551AC add     rsi, rax
.text:00005555555551AF sar     rsi, 1
.text:00005555555551B2 jz      short locret_5555555551C8
.text:00005555555551B4 mov     rax, cs:_ITM_registerTMCloneTable_ptr
.text:00005555555551BB test    rax, rax
.text:00005555555551BE jz      short locret_5555555551C8
.text:00005555555551C0 jmp     rax
.text:00005555555551C0 ; ---------------------------------------------------------------------------
.text:00005555555551C2 align 8
.text:00005555555551C8
.text:00005555555551C8 locret_5555555551C8:                    ; CODE XREF: register_tm_clones+22↑j
.text:00005555555551C8                                         ; register_tm_clones+2E↑j
.text:00005555555551C8 retn
.text:00005555555551C8 register_tm_clones endp
.text:00005555555551C8
.text:00005555555551C8 ; ---------------------------------------------------------------------------
.text:00005555555551C9 align 10h
.text:00005555555551D0
.text:00005555555551D0 ; =============== S U B R O U T I N E =======================================
.text:00005555555551D0
.text:00005555555551D0
.text:00005555555551D0 __do_global_dtors_aux proc near         ; DATA XREF: .fini_array:__do_global_dtors_aux_fini_array_entry↓o
.text:00005555555551D0 endbr64
.text:00005555555551D4 cmp     cs:completed_0, 0
.text:00005555555551DB jnz     short locret_555555555208
.text:00005555555551DD push    rbp
.text:00005555555551DE cmp     cs:__cxa_finalize_ptr, 0
.text:00005555555551E6 mov     rbp, rsp
.text:00005555555551E9 jz      short loc_5555555551F7
.text:00005555555551EB mov     rdi, cs:__dso_handle            ; void *
.text:00005555555551F2 call    __cxa_finalize
.text:00005555555551F7
.text:00005555555551F7 loc_5555555551F7:                       ; CODE XREF: __do_global_dtors_aux+19↑j
.text:00005555555551F7 call    deregister_tm_clones
.text:00005555555551FC mov     cs:completed_0, 1
.text:0000555555555203 pop     rbp
.text:0000555555555204 retn
.text:0000555555555204 ; ---------------------------------------------------------------------------
.text:0000555555555205 align 8
.text:0000555555555208
.text:0000555555555208 locret_555555555208:                    ; CODE XREF: __do_global_dtors_aux+B↑j
.text:0000555555555208 retn
.text:0000555555555208 __do_global_dtors_aux endp
.text:0000555555555208
.text:0000555555555208 ; ---------------------------------------------------------------------------
.text:0000555555555209 align 10h
.text:0000555555555210
.text:0000555555555210 ; =============== S U B R O U T I N E =======================================
.text:0000555555555210
.text:0000555555555210
.text:0000555555555210 frame_dummy proc near                   ; DATA XREF: .init_array:__frame_dummy_init_array_entry↓o
.text:0000555555555210 endbr64
.text:0000555555555214 jmp     register_tm_clones
.text:0000555555555214 frame_dummy endp
.text:0000555555555214
.text:0000555555555219
.text:0000555555555219 ; =============== S U B R O U T I N E =======================================
.text:0000555555555219
.text:0000555555555219 ; Attributes: bp-based frame
.text:0000555555555219
.text:0000555555555219 ; int __fastcall main(int argc, const char **argv, const char **envp)
.text:0000555555555219 public main
.text:0000555555555219 main proc near                          ; DATA XREF: _start+18↑o
.text:0000555555555219 ; __unwind { // 555555554000
.text:0000555555555219 push    rbp
.text:000055555555521A mov     rbp, rsp
.text:000055555555521D lea     rsi, aHelloWelcomeTo            ; "Hello! Welcome to our Investment Compan"...
.text:0000555555555224 lea     rdi, __bss_start
.text:000055555555522B call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:0000555555555230
.text:0000555555555230 loc_555555555230:                       ; CODE XREF: main+4B↓j
.text:0000555555555230 call    _Z25CheckUserPermissionAccessv  ; CheckUserPermissionAccess(void)
.text:0000555555555235 mov     cs:answer, eax
.text:000055555555523B mov     eax, cs:answer
.text:0000555555555241 cmp     eax, 1
.text:0000555555555244 jz      short loc_555555555259
.text:0000555555555246 lea     rsi, aInvalidPasswor            ; "Invalid Password. Please try again\n"
.text:000055555555524D lea     rdi, __bss_start
.text:0000555555555254 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:0000555555555259
.text:0000555555555259 loc_555555555259:                       ; CODE XREF: main+2B↑j
.text:0000555555555259 mov     eax, cs:answer
.text:000055555555525F cmp     eax, 1
.text:0000555555555262 jz      short loc_555555555266
.text:0000555555555264 jmp     short loc_555555555230
.text:0000555555555266 ; ---------------------------------------------------------------------------
.text:0000555555555266
.text:0000555555555266 loc_555555555266:                       ; CODE XREF: main+49↑j
.text:0000555555555266                                         ; main+114↓j
.text:0000555555555266 lea     rsi, aWhatWouldYouLi            ; "What would you like to do?\n"
.text:000055555555526D lea     rdi, __bss_start
.text:0000555555555274 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:0000555555555279 lea     rsi, aDisplayTheClie            ; "DISPLAY the client list (enter 1)\n"
.text:0000555555555280 lea     rdi, __bss_start
.text:0000555555555287 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:000055555555528C lea     rsi, aChangeAClientS            ; "CHANGE a client's choice (enter 2)\n"
.text:0000555555555293 lea     rdi, __bss_start
.text:000055555555529A call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:000055555555529F lea     rsi, aExitTheProgram            ; "Exit the program.. (enter 3)\n"
.text:00005555555552A6 lea     rdi, __bss_start
.text:00005555555552AD call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:00005555555552B2 lea     rsi, choice
.text:00005555555552B9 lea     rdi, _ZSt3cin@GLIBCXX_3_4
.text:00005555555552C0 call    __ZNSirsERi                     ; std::istream::operator>>(int &)
.text:00005555555552C5 lea     rsi, aYouChose                  ; "You chose "
.text:00005555555552CC lea     rdi, __bss_start
.text:00005555555552D3 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:00005555555552D8 mov     rdx, rax
.text:00005555555552DB mov     eax, cs:choice
.text:00005555555552E1 mov     esi, eax
.text:00005555555552E3 mov     rdi, rdx
.text:00005555555552E6 call    __ZNSolsEi                      ; std::ostream::operator<<(int)
.text:00005555555552EB mov     rdx, rax
.text:00005555555552EE mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:00005555555552F5 mov     rsi, rax
.text:00005555555552F8 mov     rdi, rdx
.text:00005555555552FB call    __ZNSolsEPFRSoS_E               ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:0000555555555300 mov     eax, cs:choice
.text:0000555555555306 cmp     eax, 1
.text:0000555555555309 jnz     short loc_555555555312
.text:000055555555530B call    _Z11DisplayInfov                ; DisplayInfo(void)
.text:0000555555555310 jmp     short loc_555555555322
.text:0000555555555312 ; ---------------------------------------------------------------------------
.text:0000555555555312
.text:0000555555555312 loc_555555555312:                       ; CODE XREF: main+F0↑j
.text:0000555555555312 mov     eax, cs:choice
.text:0000555555555318 cmp     eax, 2
.text:000055555555531B jnz     short loc_555555555322
.text:000055555555531D call    _Z20ChangeCustomerChoicev       ; ChangeCustomerChoice(void)
.text:0000555555555322
.text:0000555555555322 loc_555555555322:                       ; CODE XREF: main+F7↑j
.text:0000555555555322                                         ; main+102↑j
.text:0000555555555322 mov     eax, cs:choice
.text:0000555555555328 cmp     eax, 3
.text:000055555555532B jz      short loc_555555555332
.text:000055555555532D jmp     loc_555555555266
.text:0000555555555332 ; ---------------------------------------------------------------------------
.text:0000555555555332
.text:0000555555555332 loc_555555555332:                       ; CODE XREF: main+112↑j
.text:0000555555555332 mov     eax, 0
.text:0000555555555337 pop     rbp
.text:0000555555555338 retn
.text:0000555555555338 ; } // starts at 555555555219
.text:0000555555555338 main endp
.text:0000555555555338
.text:0000555555555339
.text:0000555555555339 ; =============== S U B R O U T I N E =======================================
.text:0000555555555339
.text:0000555555555339 ; Attributes: bp-based frame
.text:0000555555555339
.text:0000555555555339 ; __int64 CheckUserPermissionAccess(void)
.text:0000555555555339 public _Z25CheckUserPermissionAccessv
.text:0000555555555339 _Z25CheckUserPermissionAccessv proc near
.text:0000555555555339                                         ; CODE XREF: main:loc_555555555230↑p
.text:0000555555555339
.text:0000555555555339 var_45= byte ptr -45h
.text:0000555555555339 var_44= dword ptr -44h
.text:0000555555555339 var_40= byte ptr -40h
.text:0000555555555339 var_18= qword ptr -18h
.text:0000555555555339
.text:0000555555555339 ; __unwind { // __gxx_personality_v0
.text:0000555555555339 push    rbp
.text:000055555555533A mov     rbp, rsp
.text:000055555555533D push    rbx
.text:000055555555533E sub     rsp, 48h
.text:0000555555555342 mov     rax, fs:28h
.text:000055555555534B mov     [rbp+var_18], rax
.text:000055555555534F xor     eax, eax
.text:0000555555555351 lea     rax, [rbp+var_45]
.text:0000555555555355 mov     rdi, rax
.text:0000555555555358 call    __ZNSaIcEC1Ev                   ; std::allocator<char>::allocator(void)
.text:000055555555535D lea     rdx, [rbp+var_45]
.text:0000555555555361 lea     rax, [rbp+var_40]
.text:0000555555555365 lea     rsi, unk_5555555560F5
.text:000055555555536C mov     rdi, rax
.text:000055555555536F ;   try {
.text:000055555555536F call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_ ; std::string::basic_string(char const*,std::allocator<char> const&)
.text:000055555555536F ;   } // starts at 55555555536F
.text:0000555555555374 lea     rax, [rbp+var_45]
.text:0000555555555378 mov     rdi, rax
.text:000055555555537B call    __ZNSaIcED1Ev                   ; std::allocator<char>::~allocator()
.text:0000555555555380 mov     [rbp+var_44], 0
.text:0000555555555387 lea     rsi, aEnterYourUsern            ; "Enter your username: \n"
.text:000055555555538E lea     rdi, __bss_start
.text:0000555555555395 ;   try {
.text:0000555555555395 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:000055555555539A lea     rsi, username
.text:00005555555553A1 lea     rdi, _ZSt3cin@GLIBCXX_3_4
.text:00005555555553A8 call    __ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_PS3_ ; std::operator>><char,std::char_traits<char>>(std::istream &,char*)
.text:00005555555553AD lea     rsi, aEnterYourPassw            ; "Enter your password: \n"
.text:00005555555553B4 lea     rdi, __bss_start
.text:00005555555553BB call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:00005555555553C0 lea     rax, [rbp+var_40]
.text:00005555555553C4 mov     rsi, rax
.text:00005555555553C7 lea     rdi, _ZSt3cin@GLIBCXX_3_4
.text:00005555555553CE call    __ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE ; std::operator>><char>(std::istream &,std::string &)
.text:00005555555553CE ;   } // starts at 555555555395
.text:00005555555553D3 lea     rax, [rbp+var_40]
.text:00005555555553D7 lea     rsi, a123                       ; "123"
.text:00005555555553DE mov     rdi, rax
.text:00005555555553E1 call    __ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc ; std::string::compare(char const*)
.text:00005555555553E6 mov     [rbp+var_44], eax
.text:00005555555553E9 cmp     [rbp+var_44], 0
.text:00005555555553ED jnz     short loc_5555555553F6
.text:00005555555553EF mov     ebx, 1
.text:00005555555553F4 jmp     short loc_5555555553FB
.text:00005555555553F6 ; ---------------------------------------------------------------------------
.text:00005555555553F6
.text:00005555555553F6 loc_5555555553F6:                       ; CODE XREF: CheckUserPermissionAccess(void)+B4↑j
.text:00005555555553F6 mov     ebx, 2
.text:00005555555553FB
.text:00005555555553FB loc_5555555553FB:                       ; CODE XREF: CheckUserPermissionAccess(void)+BB↑j
.text:00005555555553FB lea     rax, [rbp+var_40]
.text:00005555555553FF mov     rdi, rax
.text:0000555555555402 call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
.text:0000555555555407 mov     eax, ebx
.text:0000555555555409 mov     rcx, [rbp+var_18]
.text:000055555555540D xor     rcx, fs:28h
.text:0000555555555416 jz      short loc_555555555453
.text:0000555555555418 jmp     short loc_55555555544E
.text:000055555555541A ; ---------------------------------------------------------------------------
.text:000055555555541A ;   cleanup() // owned by 55555555536F
.text:000055555555541A mov     rbx, rax
.text:000055555555541D lea     rax, [rbp+var_45]
.text:0000555555555421 mov     rdi, rax
.text:0000555555555424 call    __ZNSaIcED1Ev                   ; std::allocator<char>::~allocator()
.text:0000555555555429 mov     rax, rbx
.text:000055555555542C mov     rdi, rax                        ; struct _Unwind_Exception *
.text:000055555555542F call    __Unwind_Resume
.text:0000555555555434 ; ---------------------------------------------------------------------------
.text:0000555555555434 ;   cleanup() // owned by 555555555395
.text:0000555555555434 mov     rbx, rax
.text:0000555555555437 lea     rax, [rbp+var_40]
.text:000055555555543B mov     rdi, rax
.text:000055555555543E call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
.text:0000555555555443 mov     rax, rbx
.text:0000555555555446 mov     rdi, rax                        ; struct _Unwind_Exception *
.text:0000555555555449 call    __Unwind_Resume
.text:000055555555544E ; ---------------------------------------------------------------------------
.text:000055555555544E
.text:000055555555544E loc_55555555544E:                       ; CODE XREF: CheckUserPermissionAccess(void)+DF↑j
.text:000055555555544E call    ___stack_chk_fail
.text:0000555555555453 ; ---------------------------------------------------------------------------
.text:0000555555555453
.text:0000555555555453 loc_555555555453:                       ; CODE XREF: CheckUserPermissionAccess(void)+DD↑j
.text:0000555555555453 add     rsp, 48h
.text:0000555555555457 pop     rbx
.text:0000555555555458 pop     rbp
.text:0000555555555459 retn
.text:0000555555555459 ; } // starts at 555555555339
.text:0000555555555459 _Z25CheckUserPermissionAccessv endp
.text:0000555555555459
.text:000055555555545A
.text:000055555555545A ; =============== S U B R O U T I N E =======================================
.text:000055555555545A
.text:000055555555545A ; Attributes: bp-based frame
.text:000055555555545A
.text:000055555555545A ; __int64 DisplayInfo(void)
.text:000055555555545A public _Z11DisplayInfov
.text:000055555555545A _Z11DisplayInfov proc near              ; CODE XREF: main+F2↑p
.text:000055555555545A ; __unwind { // 555555554000
.text:000055555555545A push    rbp
.text:000055555555545B mov     rbp, rsp
.text:000055555555545E lea     rsi, aClientSNameSer            ; "  Client's Name    Service Selected (1 "...
.text:0000555555555465 lea     rdi, __bss_start
.text:000055555555546C call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:0000555555555471 mov     rdx, rax
.text:0000555555555474 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:000055555555547B mov     rsi, rax
.text:000055555555547E mov     rdi, rdx
.text:0000555555555481 call    __ZNSolsEPFRSoS_E               ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:0000555555555486 lea     rsi, a1                         ; "1. "
.text:000055555555548D lea     rdi, __bss_start
.text:0000555555555494 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:0000555555555499 lea     rsi, name1                      ; "Bob Jones"
.text:00005555555554A0 mov     rdi, rax
.text:00005555555554A3 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:00005555555554A8 lea     rsi, aSelectedOption            ; " selected option "
.text:00005555555554AF mov     rdi, rax
.text:00005555555554B2 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:00005555555554B7 mov     rdx, rax
.text:00005555555554BA mov     eax, cs:num1
.text:00005555555554C0 mov     esi, eax
.text:00005555555554C2 mov     rdi, rdx
.text:00005555555554C5 call    __ZNSolsEi                      ; std::ostream::operator<<(int)
.text:00005555555554CA mov     rdx, rax
.text:00005555555554CD mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:00005555555554D4 mov     rsi, rax
.text:00005555555554D7 mov     rdi, rdx
.text:00005555555554DA call    __ZNSolsEPFRSoS_E               ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:00005555555554DF lea     rsi, a2                         ; "2. "
.text:00005555555554E6 lea     rdi, __bss_start
.text:00005555555554ED call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:00005555555554F2 lea     rsi, name2                      ; "Sarah Davis"
.text:00005555555554F9 mov     rdi, rax
.text:00005555555554FC call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:0000555555555501 lea     rsi, aSelectedOption            ; " selected option "
.text:0000555555555508 mov     rdi, rax
.text:000055555555550B call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:0000555555555510 mov     rdx, rax
.text:0000555555555513 mov     eax, cs:num2
.text:0000555555555519 mov     esi, eax
.text:000055555555551B mov     rdi, rdx
.text:000055555555551E call    __ZNSolsEi                      ; std::ostream::operator<<(int)
.text:0000555555555523 mov     rdx, rax
.text:0000555555555526 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:000055555555552D mov     rsi, rax
.text:0000555555555530 mov     rdi, rdx
.text:0000555555555533 call    __ZNSolsEPFRSoS_E               ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:0000555555555538 lea     rsi, a3                         ; "3. "
.text:000055555555553F lea     rdi, __bss_start
.text:0000555555555546 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:000055555555554B lea     rsi, name3                      ; "Amy Friendly"
.text:0000555555555552 mov     rdi, rax
.text:0000555555555555 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:000055555555555A lea     rsi, aSelectedOption            ; " selected option "
.text:0000555555555561 mov     rdi, rax
.text:0000555555555564 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:0000555555555569 mov     rdx, rax
.text:000055555555556C mov     eax, cs:num3
.text:0000555555555572 mov     esi, eax
.text:0000555555555574 mov     rdi, rdx
.text:0000555555555577 call    __ZNSolsEi                      ; std::ostream::operator<<(int)
.text:000055555555557C mov     rdx, rax
.text:000055555555557F mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:0000555555555586 mov     rsi, rax
.text:0000555555555589 mov     rdi, rdx
.text:000055555555558C call    __ZNSolsEPFRSoS_E               ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:0000555555555591 lea     rsi, a4                         ; "4. "
.text:0000555555555598 lea     rdi, __bss_start
.text:000055555555559F call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:00005555555555A4 lea     rsi, name4                      ; "Johnny Smith"
.text:00005555555555AB mov     rdi, rax
.text:00005555555555AE call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:00005555555555B3 lea     rsi, aSelectedOption            ; " selected option "
.text:00005555555555BA mov     rdi, rax
.text:00005555555555BD call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:00005555555555C2 mov     rdx, rax
.text:00005555555555C5 mov     eax, cs:num4
.text:00005555555555CB mov     esi, eax
.text:00005555555555CD mov     rdi, rdx
.text:00005555555555D0 call    __ZNSolsEi                      ; std::ostream::operator<<(int)
.text:00005555555555D5 mov     rdx, rax
.text:00005555555555D8 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:00005555555555DF mov     rsi, rax
.text:00005555555555E2 mov     rdi, rdx
.text:00005555555555E5 call    __ZNSolsEPFRSoS_E               ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:00005555555555EA lea     rsi, a5                         ; "5. "
.text:00005555555555F1 lea     rdi, __bss_start
.text:00005555555555F8 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:00005555555555FD lea     rsi, name5                      ; "Carol Spears"
.text:0000555555555604 mov     rdi, rax
.text:0000555555555607 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:000055555555560C lea     rsi, aSelectedOption            ; " selected option "
.text:0000555555555613 mov     rdi, rax
.text:0000555555555616 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:000055555555561B mov     rdx, rax
.text:000055555555561E mov     eax, cs:num5
.text:0000555555555624 mov     esi, eax
.text:0000555555555626 mov     rdi, rdx
.text:0000555555555629 call    __ZNSolsEi                      ; std::ostream::operator<<(int)
.text:000055555555562E mov     rdx, rax
.text:0000555555555631 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:0000555555555638 mov     rsi, rax
.text:000055555555563B mov     rdi, rdx
.text:000055555555563E call    __ZNSolsEPFRSoS_E               ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:0000555555555643 nop
.text:0000555555555644 pop     rbp
.text:0000555555555645 retn
.text:0000555555555645 ; } // starts at 55555555545A
.text:0000555555555645 _Z11DisplayInfov endp
.text:0000555555555645
.text:0000555555555646
.text:0000555555555646 ; =============== S U B R O U T I N E =======================================
.text:0000555555555646
.text:0000555555555646 ; Attributes: bp-based frame
.text:0000555555555646
.text:0000555555555646 ; __int64 ChangeCustomerChoice(void)
.text:0000555555555646 public _Z20ChangeCustomerChoicev
.text:0000555555555646 _Z20ChangeCustomerChoicev proc near     ; CODE XREF: main+104↑p
.text:0000555555555646 ; __unwind { // 555555554000
.text:0000555555555646 push    rbp
.text:0000555555555647 mov     rbp, rsp
.text:000055555555564A lea     rsi, aEnterTheNumber            ; "Enter the number of the client that you"...
.text:0000555555555651 lea     rdi, __bss_start
.text:0000555555555658 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:000055555555565D lea     rsi, changechoice
.text:0000555555555664 lea     rdi, _ZSt3cin@GLIBCXX_3_4
.text:000055555555566B call    __ZNSirsERi                     ; std::istream::operator>>(int &)
.text:0000555555555670 lea     rsi, aPleaseEnterThe            ; "Please enter the client's new service c"...
.text:0000555555555677 lea     rdi, __bss_start
.text:000055555555567E call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.text:0000555555555683 lea     rsi, newservice
.text:000055555555568A lea     rdi, _ZSt3cin@GLIBCXX_3_4
.text:0000555555555691 call    __ZNSirsERi                     ; std::istream::operator>>(int &)
.text:0000555555555696 mov     eax, cs:changechoice
.text:000055555555569C cmp     eax, 1
.text:000055555555569F jnz     short loc_5555555556AF
.text:00005555555556A1 mov     eax, cs:newservice
.text:00005555555556A7 mov     cs:num1, eax
.text:00005555555556AD jmp     short loc_555555555711
.text:00005555555556AF ; ---------------------------------------------------------------------------
.text:00005555555556AF
.text:00005555555556AF loc_5555555556AF:                       ; CODE XREF: ChangeCustomerChoice(void)+59↑j
.text:00005555555556AF mov     eax, cs:changechoice
.text:00005555555556B5 cmp     eax, 2
.text:00005555555556B8 jnz     short loc_5555555556C8
.text:00005555555556BA mov     eax, cs:newservice
.text:00005555555556C0 mov     cs:num2, eax
.text:00005555555556C6 jmp     short loc_555555555711
.text:00005555555556C8 ; ---------------------------------------------------------------------------
.text:00005555555556C8
.text:00005555555556C8 loc_5555555556C8:                       ; CODE XREF: ChangeCustomerChoice(void)+72↑j
.text:00005555555556C8 mov     eax, cs:changechoice
.text:00005555555556CE cmp     eax, 3
.text:00005555555556D1 jnz     short loc_5555555556E1
.text:00005555555556D3 mov     eax, cs:newservice
.text:00005555555556D9 mov     cs:num3, eax
.text:00005555555556DF jmp     short loc_555555555711
.text:00005555555556E1 ; ---------------------------------------------------------------------------
.text:00005555555556E1
.text:00005555555556E1 loc_5555555556E1:                       ; CODE XREF: ChangeCustomerChoice(void)+8B↑j
.text:00005555555556E1 mov     eax, cs:changechoice
.text:00005555555556E7 cmp     eax, 4
.text:00005555555556EA jnz     short loc_5555555556FA
.text:00005555555556EC mov     eax, cs:newservice
.text:00005555555556F2 mov     cs:num4, eax
.text:00005555555556F8 jmp     short loc_555555555711
.text:00005555555556FA ; ---------------------------------------------------------------------------
.text:00005555555556FA
.text:00005555555556FA loc_5555555556FA:                       ; CODE XREF: ChangeCustomerChoice(void)+A4↑j
.text:00005555555556FA mov     eax, cs:changechoice
.text:0000555555555700 cmp     eax, 5
.text:0000555555555703 jnz     short loc_555555555711
.text:0000555555555705 mov     eax, cs:newservice
.text:000055555555570B mov     cs:num5, eax
.text:0000555555555711
.text:0000555555555711 loc_555555555711:                       ; CODE XREF: ChangeCustomerChoice(void)+67↑j
.text:0000555555555711                                         ; ChangeCustomerChoice(void)+80↑j ...
.text:0000555555555711 nop
.text:0000555555555712 pop     rbp
.text:0000555555555713 retn
.text:0000555555555713 ; } // starts at 555555555646
.text:0000555555555713 _Z20ChangeCustomerChoicev endp
.text:0000555555555713
.text:0000555555555714
.text:0000555555555714 ; =============== S U B R O U T I N E =======================================
.text:0000555555555714
.text:0000555555555714 ; Attributes: bp-based frame
.text:0000555555555714
.text:0000555555555714 ; __int64 __fastcall __static_initialization_and_destruction_0(int, int)
.text:0000555555555714 _Z41__static_initialization_and_destruction_0ii proc near
.text:0000555555555714                                         ; CODE XREF: _GLOBAL__sub_I_username+E↓p
.text:0000555555555714
.text:0000555555555714 var_8= dword ptr -8
.text:0000555555555714 var_4= dword ptr -4
.text:0000555555555714
.text:0000555555555714 ; __unwind { // 555555554000
.text:0000555555555714 push    rbp
.text:0000555555555715 mov     rbp, rsp
.text:0000555555555718 sub     rsp, 10h
.text:000055555555571C mov     [rbp+var_4], edi
.text:000055555555571F mov     [rbp+var_8], esi
.text:0000555555555722 cmp     [rbp+var_4], 1
.text:0000555555555726 jnz     short loc_55555555575A
.text:0000555555555728 cmp     [rbp+var_8], 0FFFFh
.text:000055555555572F jnz     short loc_55555555575A
.text:0000555555555731 lea     rdi, _ZStL8__ioinit             ; this
.text:0000555555555738 call    __ZNSt8ios_base4InitC1Ev        ; std::ios_base::Init::Init(void)
.text:000055555555573D lea     rdx, __dso_handle               ; lpdso_handle
.text:0000555555555744 lea     rsi, _ZStL8__ioinit             ; obj
.text:000055555555574B mov     rax, cs:lpfunc
.text:0000555555555752 mov     rdi, rax                        ; lpfunc
.text:0000555555555755 call    ___cxa_atexit
.text:000055555555575A
.text:000055555555575A loc_55555555575A:                       ; CODE XREF: __static_initialization_and_destruction_0(int,int)+12↑j
.text:000055555555575A                                         ; __static_initialization_and_destruction_0(int,int)+1B↑j
.text:000055555555575A nop
.text:000055555555575B leave
.text:000055555555575C retn
.text:000055555555575C ; } // starts at 555555555714
.text:000055555555575C _Z41__static_initialization_and_destruction_0ii endp
.text:000055555555575C
.text:000055555555575D
.text:000055555555575D ; =============== S U B R O U T I N E =======================================
.text:000055555555575D
.text:000055555555575D ; Attributes: bp-based frame
.text:000055555555575D
.text:000055555555575D _GLOBAL__sub_I_username proc near       ; DATA XREF: .init_array:0000555555557D18↓o
.text:000055555555575D ; __unwind { // 555555554000
.text:000055555555575D push    rbp
.text:000055555555575E mov     rbp, rsp
.text:0000555555555761 mov     esi, 0FFFFh                     ; int
.text:0000555555555766 mov     edi, 1                          ; int
.text:000055555555576B call    _Z41__static_initialization_and_destruction_0ii ; __static_initialization_and_destruction_0(int,int)
.text:0000555555555770 pop     rbp
.text:0000555555555771 retn
.text:0000555555555771 ; } // starts at 55555555575D
.text:0000555555555771 _GLOBAL__sub_I_username endp
.text:0000555555555771
.text:0000555555555771 _text ends
.text:0000555555555771
LOAD:0000555555555772 ; ===========================================================================
LOAD:0000555555555772
LOAD:0000555555555772 ; Segment type: Pure code
LOAD:0000555555555772 ; Segment permissions: Read/Execute
LOAD:0000555555555772 LOAD segment mempage public 'CODE' use64
LOAD:0000555555555772 assume cs:LOAD
LOAD:0000555555555772 ;org 555555555772h
LOAD:0000555555555772 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000555555555772 align 4
LOAD:0000555555555772 LOAD ends
LOAD:0000555555555772
.fini:0000555555555774 ; ===========================================================================
.fini:0000555555555774
.fini:0000555555555774 ; Segment type: Pure code
.fini:0000555555555774 ; Segment permissions: Read/Execute
.fini:0000555555555774 _fini segment dword public 'CODE' use64
.fini:0000555555555774 assume cs:_fini
.fini:0000555555555774 ;org 555555555774h
.fini:0000555555555774 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.fini:0000555555555774
.fini:0000555555555774 ; =============== S U B R O U T I N E =======================================
.fini:0000555555555774
.fini:0000555555555774
.fini:0000555555555774 public _term_proc
.fini:0000555555555774 _term_proc proc near
.fini:0000555555555774 endbr64                                 ; _fini
.fini:0000555555555778 sub     rsp, 8
.fini:000055555555577C add     rsp, 8
.fini:0000555555555780 retn
.fini:0000555555555780 _term_proc endp
.fini:0000555555555780
.fini:0000555555555780 _fini ends
.fini:0000555555555780
.rodata:0000555555556000 ; ===========================================================================
.rodata:0000555555556000
.rodata:0000555555556000 ; Segment type: Pure data
.rodata:0000555555556000 ; Segment permissions: Read
.rodata:0000555555556000 _rodata segment qword public 'CONST' use64
.rodata:0000555555556000 assume cs:_rodata
.rodata:0000555555556000 ;org 555555556000h
.rodata:0000555555556000 public _IO_stdin_used
.rodata:0000555555556000 _IO_stdin_used db    1
.rodata:0000555555556001 db    0
.rodata:0000555555556002 db    2
.rodata:0000555555556003 db    0
.rodata:0000555555556004 db    0
.rodata:0000555555556005 db    0
.rodata:0000555555556006 db    0
.rodata:0000555555556007 db    0
.rodata:0000555555556008 ; std::piecewise_construct
.rodata:0000555555556008 _ZStL19piecewise_construct db    0
.rodata:0000555555556009 db    0
.rodata:000055555555600A db    0
.rodata:000055555555600B db    0
.rodata:000055555555600C db    0
.rodata:000055555555600D db    0
.rodata:000055555555600E db    0
.rodata:000055555555600F db    0
.rodata:0000555555556010 aHelloWelcomeTo db 'Hello! Welcome to our Investment Company',0Ah,0
.rodata:0000555555556010                                         ; DATA XREF: main+4↑o
.rodata:000055555555603A align 20h
.rodata:0000555555556040 aInvalidPasswor db 'Invalid Password. Please try again',0Ah,0
.rodata:0000555555556040                                         ; DATA XREF: main+2D↑o
.rodata:0000555555556064 aWhatWouldYouLi db 'What would you like to do?',0Ah,0
.rodata:0000555555556064                                         ; DATA XREF: main:loc_555555555266↑o
.rodata:0000555555556080 aDisplayTheClie db 'DISPLAY the client list (enter 1)',0Ah,0
.rodata:0000555555556080                                         ; DATA XREF: main+60↑o
.rodata:00005555555560A3 align 8
.rodata:00005555555560A8 aChangeAClientS db 'CHANGE a client',27h,'s choice (enter 2)',0Ah,0
.rodata:00005555555560A8                                         ; DATA XREF: main+73↑o
.rodata:00005555555560CC aExitTheProgram db 'Exit the program.. (enter 3)',0Ah,0
.rodata:00005555555560CC                                         ; DATA XREF: main+86↑o
.rodata:00005555555560EA aYouChose db 'You chose ',0             ; DATA XREF: main+AC↑o
.rodata:00005555555560F5 unk_5555555560F5 db    0                ; DATA XREF: CheckUserPermissionAccess(void)+2C↑o
.rodata:00005555555560F6 aEnterYourUsern db 'Enter your username: ',0Ah,0
.rodata:00005555555560F6                                         ; DATA XREF: CheckUserPermissionAccess(void)+4E↑o
.rodata:000055555555610D aEnterYourPassw db 'Enter your password: ',0Ah,0
.rodata:000055555555610D                                         ; DATA XREF: CheckUserPermissionAccess(void)+74↑o
.rodata:0000555555556124 a123 db '123',0                         ; DATA XREF: CheckUserPermissionAccess(void)+9E↑o
.rodata:0000555555556128 aClientSNameSer db '  Client',27h,'s Name    Service Selected (1 = Brokerage, 2 = Ret'
.rodata:0000555555556128                                         ; DATA XREF: DisplayInfo(void)+4↑o
.rodata:0000555555556163 db 'irement)',0
.rodata:000055555555616C a1 db '1. ',0                           ; DATA XREF: DisplayInfo(void)+2C↑o
.rodata:0000555555556170 aSelectedOption db ' selected option ',0
.rodata:0000555555556170                                         ; DATA XREF: DisplayInfo(void)+4E↑o
.rodata:0000555555556170                                         ; DisplayInfo(void)+A7↑o ...
.rodata:0000555555556182 a2 db '2. ',0                           ; DATA XREF: DisplayInfo(void)+85↑o
.rodata:0000555555556186 a3 db '3. ',0                           ; DATA XREF: DisplayInfo(void)+DE↑o
.rodata:000055555555618A a4 db '4. ',0                           ; DATA XREF: DisplayInfo(void)+137↑o
.rodata:000055555555618E a5 db '5. ',0                           ; DATA XREF: DisplayInfo(void)+190↑o
.rodata:0000555555556192 align 8
.rodata:0000555555556198 aEnterTheNumber db 'Enter the number of the client that you wish to change',0Ah,0
.rodata:0000555555556198                                         ; DATA XREF: ChangeCustomerChoice(void)+4↑o
.rodata:00005555555561D0 aPleaseEnterThe db 'Please enter the client',27h,'s new service choice (1 = Brokerage'
.rodata:00005555555561D0                                         ; DATA XREF: ChangeCustomerChoice(void)+2A↑o
.rodata:000055555555620B db ', 2 = Retirement)',0Ah,0
.rodata:000055555555620B _rodata ends
.rodata:000055555555620B
LOAD:000055555555621E ; ===========================================================================
LOAD:000055555555621E
LOAD:000055555555621E ; Segment type: Pure data
LOAD:000055555555621E ; Segment permissions: Read
LOAD:000055555555621E LOAD segment mempage public 'DATA' use64
LOAD:000055555555621E assume cs:LOAD
LOAD:000055555555621E ;org 55555555621Eh
LOAD:000055555555621E align 20h
LOAD:000055555555621E LOAD ends
LOAD:000055555555621E
.eh_frame_hdr:0000555555556220 ; ===========================================================================
.eh_frame_hdr:0000555555556220
.eh_frame_hdr:0000555555556220 ; Segment type: Pure data
.eh_frame_hdr:0000555555556220 ; Segment permissions: Read
.eh_frame_hdr:0000555555556220 _eh_frame_hdr segment dword public 'CONST' use64
.eh_frame_hdr:0000555555556220 assume cs:_eh_frame_hdr
.eh_frame_hdr:0000555555556220 ;org 555555556220h
.eh_frame_hdr:0000555555556220 __GNU_EH_FRAME_HDR db    1
.eh_frame_hdr:0000555555556221 db  1Bh
.eh_frame_hdr:0000555555556222 db    3
.eh_frame_hdr:0000555555556223 db  3Bh ; ;
.eh_frame_hdr:0000555555556224 db  54h ; T
.eh_frame_hdr:0000555555556225 db    0
.eh_frame_hdr:0000555555556226 db    0
.eh_frame_hdr:0000555555556227 db    0
.eh_frame_hdr:0000555555556228 db    9
.eh_frame_hdr:0000555555556229 db    0
.eh_frame_hdr:000055555555622A db    0
.eh_frame_hdr:000055555555622B db    0
.eh_frame_hdr:000055555555622C db    0
.eh_frame_hdr:000055555555622D db 0EEh
.eh_frame_hdr:000055555555622E db 0FFh
.eh_frame_hdr:000055555555622F db 0FFh
.eh_frame_hdr:0000555555556230 db  88h
.eh_frame_hdr:0000555555556231 db    0
.eh_frame_hdr:0000555555556232 db    0
.eh_frame_hdr:0000555555556233 db    0
.eh_frame_hdr:0000555555556234 db    0
.eh_frame_hdr:0000555555556235 db 0EFh
.eh_frame_hdr:0000555555556236 db 0FFh
.eh_frame_hdr:0000555555556237 db 0FFh
.eh_frame_hdr:0000555555556238 db 0B0h
.eh_frame_hdr:0000555555556239 db    0
.eh_frame_hdr:000055555555623A db    0
.eh_frame_hdr:000055555555623B db    0
.eh_frame_hdr:000055555555623C db  10h
.eh_frame_hdr:000055555555623D db 0EFh
.eh_frame_hdr:000055555555623E db 0FFh
.eh_frame_hdr:000055555555623F db 0FFh
.eh_frame_hdr:0000555555556240 db  70h ; p
.eh_frame_hdr:0000555555556241 db    0
.eh_frame_hdr:0000555555556242 db    0
.eh_frame_hdr:0000555555556243 db    0
.eh_frame_hdr:0000555555556244 db 0F9h
.eh_frame_hdr:0000555555556245 db 0EFh
.eh_frame_hdr:0000555555556246 db 0FFh
.eh_frame_hdr:0000555555556247 db 0FFh
.eh_frame_hdr:0000555555556248 db 0C8h
.eh_frame_hdr:0000555555556249 db    0
.eh_frame_hdr:000055555555624A db    0
.eh_frame_hdr:000055555555624B db    0
.eh_frame_hdr:000055555555624C db  19h
.eh_frame_hdr:000055555555624D db 0F1h
.eh_frame_hdr:000055555555624E db 0FFh
.eh_frame_hdr:000055555555624F db 0FFh
.eh_frame_hdr:0000555555556250 db    8
.eh_frame_hdr:0000555555556251 db    1
.eh_frame_hdr:0000555555556252 db    0
.eh_frame_hdr:0000555555556253 db    0
.eh_frame_hdr:0000555555556254 db  3Ah ; :
.eh_frame_hdr:0000555555556255 db 0F2h
.eh_frame_hdr:0000555555556256 db 0FFh
.eh_frame_hdr:0000555555556257 db 0FFh
.eh_frame_hdr:0000555555556258 db  30h ; 0
.eh_frame_hdr:0000555555556259 db    1
.eh_frame_hdr:000055555555625A db    0
.eh_frame_hdr:000055555555625B db    0
.eh_frame_hdr:000055555555625C db  26h ; &
.eh_frame_hdr:000055555555625D db 0F4h
.eh_frame_hdr:000055555555625E db 0FFh
.eh_frame_hdr:000055555555625F db 0FFh
.eh_frame_hdr:0000555555556260 db  50h ; P
.eh_frame_hdr:0000555555556261 db    1
.eh_frame_hdr:0000555555556262 db    0
.eh_frame_hdr:0000555555556263 db    0
.eh_frame_hdr:0000555555556264 db 0F4h
.eh_frame_hdr:0000555555556265 db 0F4h
.eh_frame_hdr:0000555555556266 db 0FFh
.eh_frame_hdr:0000555555556267 db 0FFh
.eh_frame_hdr:0000555555556268 db  70h ; p
.eh_frame_hdr:0000555555556269 db    1
.eh_frame_hdr:000055555555626A db    0
.eh_frame_hdr:000055555555626B db    0
.eh_frame_hdr:000055555555626C db  3Dh ; =
.eh_frame_hdr:000055555555626D db 0F5h
.eh_frame_hdr:000055555555626E db 0FFh
.eh_frame_hdr:000055555555626F db 0FFh
.eh_frame_hdr:0000555555556270 db  90h
.eh_frame_hdr:0000555555556271 db    1
.eh_frame_hdr:0000555555556272 db    0
.eh_frame_hdr:0000555555556273 db    0
.eh_frame_hdr:0000555555556273 _eh_frame_hdr ends
.eh_frame_hdr:0000555555556273
LOAD:0000555555556274 ; ===========================================================================
LOAD:0000555555556274
LOAD:0000555555556274 ; Segment type: Pure data
LOAD:0000555555556274 ; Segment permissions: Read
LOAD:0000555555556274 LOAD segment mempage public 'DATA' use64
LOAD:0000555555556274 assume cs:LOAD
LOAD:0000555555556274 ;org 555555556274h
LOAD:0000555555556274 align 8
LOAD:0000555555556274 LOAD ends
LOAD:0000555555556274
.eh_frame:0000555555556278 ; ===========================================================================
.eh_frame:0000555555556278
.eh_frame:0000555555556278 ; Segment type: Pure data
.eh_frame:0000555555556278 ; Segment permissions: Read
.eh_frame:0000555555556278 _eh_frame segment qword public 'CONST' use64
.eh_frame:0000555555556278 assume cs:_eh_frame
.eh_frame:0000555555556278 ;org 555555556278h
.eh_frame:0000555555556278 db  14h
.eh_frame:0000555555556279 db    0
.eh_frame:000055555555627A db    0
.eh_frame:000055555555627B db    0
.eh_frame:000055555555627C db    0
.eh_frame:000055555555627D db    0
.eh_frame:000055555555627E db    0
.eh_frame:000055555555627F db    0
.eh_frame:0000555555556280 db    1
.eh_frame:0000555555556281 db  7Ah ; z
.eh_frame:0000555555556282 db  52h ; R
.eh_frame:0000555555556283 db    0
.eh_frame:0000555555556284 db    1
.eh_frame:0000555555556285 db  78h ; x
.eh_frame:0000555555556286 db  10h
.eh_frame:0000555555556287 db    1
.eh_frame:0000555555556288 db  1Bh
.eh_frame:0000555555556289 db  0Ch
.eh_frame:000055555555628A db    7
.eh_frame:000055555555628B db    8
.eh_frame:000055555555628C db  90h
.eh_frame:000055555555628D db    1
.eh_frame:000055555555628E db    0
.eh_frame:000055555555628F db    0
.eh_frame:0000555555556290 db  14h
.eh_frame:0000555555556291 db    0
.eh_frame:0000555555556292 db    0
.eh_frame:0000555555556293 db    0
.eh_frame:0000555555556294 db  1Ch
.eh_frame:0000555555556295 db    0
.eh_frame:0000555555556296 db    0
.eh_frame:0000555555556297 db    0
.eh_frame:0000555555556298 db  98h
.eh_frame:0000555555556299 db 0EEh
.eh_frame:000055555555629A db 0FFh
.eh_frame:000055555555629B db 0FFh
.eh_frame:000055555555629C db  26h ; &
.eh_frame:000055555555629D db    0
.eh_frame:000055555555629E db    0
.eh_frame:000055555555629F db    0
.eh_frame:00005555555562A0 db    0
.eh_frame:00005555555562A1 db  44h ; D
.eh_frame:00005555555562A2 db    7
.eh_frame:00005555555562A3 db  10h
.eh_frame:00005555555562A4 db    0
.eh_frame:00005555555562A5 db    0
.eh_frame:00005555555562A6 db    0
.eh_frame:00005555555562A7 db    0
.eh_frame:00005555555562A8 db  24h ; $
.eh_frame:00005555555562A9 db    0
.eh_frame:00005555555562AA db    0
.eh_frame:00005555555562AB db    0
.eh_frame:00005555555562AC db  34h ; 4
.eh_frame:00005555555562AD db    0
.eh_frame:00005555555562AE db    0
.eh_frame:00005555555562AF db    0
.eh_frame:00005555555562B0 db  70h ; p
.eh_frame:00005555555562B1 db 0EDh
.eh_frame:00005555555562B2 db 0FFh
.eh_frame:00005555555562B3 db 0FFh
.eh_frame:00005555555562B4 db    0
.eh_frame:00005555555562B5 db    1
.eh_frame:00005555555562B6 db    0
.eh_frame:00005555555562B7 db    0
.eh_frame:00005555555562B8 db    0
.eh_frame:00005555555562B9 db  0Eh
.eh_frame:00005555555562BA db  10h
.eh_frame:00005555555562BB db  46h ; F
.eh_frame:00005555555562BC db  0Eh
.eh_frame:00005555555562BD db  18h
.eh_frame:00005555555562BE db  4Ah ; J
.eh_frame:00005555555562BF db  0Fh
.eh_frame:00005555555562C0 db  0Bh
.eh_frame:00005555555562C1 db  77h ; w
.eh_frame:00005555555562C2 db    8
.eh_frame:00005555555562C3 db  80h
.eh_frame:00005555555562C4 db    0
.eh_frame:00005555555562C5 db  3Fh ; ?
.eh_frame:00005555555562C6 db  1Ah
.eh_frame:00005555555562C7 db  3Bh ; ;
.eh_frame:00005555555562C8 db  2Ah ; *
.eh_frame:00005555555562C9 db  33h ; 3
.eh_frame:00005555555562CA db  24h ; $
.eh_frame:00005555555562CB db  22h ; "
.eh_frame:00005555555562CC db    0
.eh_frame:00005555555562CD db    0
.eh_frame:00005555555562CE db    0
.eh_frame:00005555555562CF db    0
.eh_frame:00005555555562D0 db  14h
.eh_frame:00005555555562D1 db    0
.eh_frame:00005555555562D2 db    0
.eh_frame:00005555555562D3 db    0
.eh_frame:00005555555562D4 db  5Ch ; \
.eh_frame:00005555555562D5 db    0
.eh_frame:00005555555562D6 db    0
.eh_frame:00005555555562D7 db    0
.eh_frame:00005555555562D8 db  48h ; H
.eh_frame:00005555555562D9 db 0EEh
.eh_frame:00005555555562DA db 0FFh
.eh_frame:00005555555562DB db 0FFh
.eh_frame:00005555555562DC db    8
.eh_frame:00005555555562DD db    0
.eh_frame:00005555555562DE db    0
.eh_frame:00005555555562DF db    0
.eh_frame:00005555555562E0 db    0
.eh_frame:00005555555562E1 db    0
.eh_frame:00005555555562E2 db    0
.eh_frame:00005555555562E3 db    0
.eh_frame:00005555555562E4 db    0
.eh_frame:00005555555562E5 db    0
.eh_frame:00005555555562E6 db    0
.eh_frame:00005555555562E7 db    0
.eh_frame:00005555555562E8 db  1Ch
.eh_frame:00005555555562E9 db    0
.eh_frame:00005555555562EA db    0
.eh_frame:00005555555562EB db    0
.eh_frame:00005555555562EC db  74h ; t
.eh_frame:00005555555562ED db    0
.eh_frame:00005555555562EE db    0
.eh_frame:00005555555562EF db    0
.eh_frame:00005555555562F0 db  29h ; )
.eh_frame:00005555555562F1 db 0EFh
.eh_frame:00005555555562F2 db 0FFh
.eh_frame:00005555555562F3 db 0FFh
.eh_frame:00005555555562F4 db  20h
.eh_frame:00005555555562F5 db    1
.eh_frame:00005555555562F6 db    0
.eh_frame:00005555555562F7 db    0
.eh_frame:00005555555562F8 db    0
.eh_frame:00005555555562F9 db  41h ; A
.eh_frame:00005555555562FA db  0Eh
.eh_frame:00005555555562FB db  10h
.eh_frame:00005555555562FC db  86h
.eh_frame:00005555555562FD db    2
.eh_frame:00005555555562FE db  43h ; C
.eh_frame:00005555555562FF db  0Dh
.eh_frame:0000555555556300 db    6
.eh_frame:0000555555556301 db    3
.eh_frame:0000555555556302 db  1Bh
.eh_frame:0000555555556303 db    1
.eh_frame:0000555555556304 db  0Ch
.eh_frame:0000555555556305 db    7
.eh_frame:0000555555556306 db    8
.eh_frame:0000555555556307 db    0
.eh_frame:0000555555556308 db  1Ch
.eh_frame:0000555555556309 db    0
.eh_frame:000055555555630A db    0
.eh_frame:000055555555630B db    0
.eh_frame:000055555555630C db    0
.eh_frame:000055555555630D db    0
.eh_frame:000055555555630E db    0
.eh_frame:000055555555630F db    0
.eh_frame:0000555555556310 db    1
.eh_frame:0000555555556311 db  7Ah ; z
.eh_frame:0000555555556312 db  50h ; P
.eh_frame:0000555555556313 db  4Ch ; L
.eh_frame:0000555555556314 db  52h ; R
.eh_frame:0000555555556315 db    0
.eh_frame:0000555555556316 db    1
.eh_frame:0000555555556317 db  78h ; x
.eh_frame:0000555555556318 db  10h
.eh_frame:0000555555556319 db    7
.eh_frame:000055555555631A db  9Bh
.eh_frame:000055555555631B db  7Dh ; }
.eh_frame:000055555555631C db  1Dh
.eh_frame:000055555555631D db    0
.eh_frame:000055555555631E db    0
.eh_frame:000055555555631F db  1Bh
.eh_frame:0000555555556320 db  1Bh
.eh_frame:0000555555556321 db  0Ch
.eh_frame:0000555555556322 db    7
.eh_frame:0000555555556323 db    8
.eh_frame:0000555555556324 db  90h
.eh_frame:0000555555556325 db    1
.eh_frame:0000555555556326 db    0
.eh_frame:0000555555556327 db    0
.eh_frame:0000555555556328 db  24h ; $
.eh_frame:0000555555556329 db    0
.eh_frame:000055555555632A db    0
.eh_frame:000055555555632B db    0
.eh_frame:000055555555632C db  24h ; $
.eh_frame:000055555555632D db    0
.eh_frame:000055555555632E db    0
.eh_frame:000055555555632F db    0
.eh_frame:0000555555556330 db    9
.eh_frame:0000555555556331 db 0F0h
.eh_frame:0000555555556332 db 0FFh
.eh_frame:0000555555556333 db 0FFh
.eh_frame:0000555555556334 db  21h ; !
.eh_frame:0000555555556335 db    1
.eh_frame:0000555555556336 db    0
.eh_frame:0000555555556337 db    0
.eh_frame:0000555555556338 db    4
.eh_frame:0000555555556339 db  9Bh
.eh_frame:000055555555633A db    0
.eh_frame:000055555555633B db    0
.eh_frame:000055555555633C db    0
.eh_frame:000055555555633D db  41h ; A
.eh_frame:000055555555633E db  0Eh
.eh_frame:000055555555633F db  10h
.eh_frame:0000555555556340 db  86h
.eh_frame:0000555555556341 db    2
.eh_frame:0000555555556342 db  43h ; C
.eh_frame:0000555555556343 db  0Dh
.eh_frame:0000555555556344 db    6
.eh_frame:0000555555556345 db  45h ; E
.eh_frame:0000555555556346 db  83h
.eh_frame:0000555555556347 db    3
.eh_frame:0000555555556348 db    3
.eh_frame:0000555555556349 db  17h
.eh_frame:000055555555634A db    1
.eh_frame:000055555555634B db  0Ch
.eh_frame:000055555555634C db    7
.eh_frame:000055555555634D db    8
.eh_frame:000055555555634E db    0
.eh_frame:000055555555634F db    0
.eh_frame:0000555555556350 db  1Ch
.eh_frame:0000555555556351 db    0
.eh_frame:0000555555556352 db    0
.eh_frame:0000555555556353 db    0
.eh_frame:0000555555556354 db 0DCh
.eh_frame:0000555555556355 db    0
.eh_frame:0000555555556356 db    0
.eh_frame:0000555555556357 db    0
.eh_frame:0000555555556358 db    2
.eh_frame:0000555555556359 db 0F1h
.eh_frame:000055555555635A db 0FFh
.eh_frame:000055555555635B db 0FFh
.eh_frame:000055555555635C db 0ECh
.eh_frame:000055555555635D db    1
.eh_frame:000055555555635E db    0
.eh_frame:000055555555635F db    0
.eh_frame:0000555555556360 db    0
.eh_frame:0000555555556361 db  41h ; A
.eh_frame:0000555555556362 db  0Eh
.eh_frame:0000555555556363 db  10h
.eh_frame:0000555555556364 db  86h
.eh_frame:0000555555556365 db    2
.eh_frame:0000555555556366 db  43h ; C
.eh_frame:0000555555556367 db  0Dh
.eh_frame:0000555555556368 db    6
.eh_frame:0000555555556369 db    3
.eh_frame:000055555555636A db 0E7h
.eh_frame:000055555555636B db    1
.eh_frame:000055555555636C db  0Ch
.eh_frame:000055555555636D db    7
.eh_frame:000055555555636E db    8
.eh_frame:000055555555636F db    0
.eh_frame:0000555555556370 db  1Ch
.eh_frame:0000555555556371 db    0
.eh_frame:0000555555556372 db    0
.eh_frame:0000555555556373 db    0
.eh_frame:0000555555556374 db 0FCh
.eh_frame:0000555555556375 db    0
.eh_frame:0000555555556376 db    0
.eh_frame:0000555555556377 db    0
.eh_frame:0000555555556378 db 0CEh
.eh_frame:0000555555556379 db 0F2h
.eh_frame:000055555555637A db 0FFh
.eh_frame:000055555555637B db 0FFh
.eh_frame:000055555555637C db 0CEh
.eh_frame:000055555555637D db    0
.eh_frame:000055555555637E db    0
.eh_frame:000055555555637F db    0
.eh_frame:0000555555556380 db    0
.eh_frame:0000555555556381 db  41h ; A
.eh_frame:0000555555556382 db  0Eh
.eh_frame:0000555555556383 db  10h
.eh_frame:0000555555556384 db  86h
.eh_frame:0000555555556385 db    2
.eh_frame:0000555555556386 db  43h ; C
.eh_frame:0000555555556387 db  0Dh
.eh_frame:0000555555556388 db    6
.eh_frame:0000555555556389 db    2
.eh_frame:000055555555638A db 0C9h
.eh_frame:000055555555638B db  0Ch
.eh_frame:000055555555638C db    7
.eh_frame:000055555555638D db    8
.eh_frame:000055555555638E db    0
.eh_frame:000055555555638F db    0
.eh_frame:0000555555556390 db  1Ch
.eh_frame:0000555555556391 db    0
.eh_frame:0000555555556392 db    0
.eh_frame:0000555555556393 db    0
.eh_frame:0000555555556394 db  1Ch
.eh_frame:0000555555556395 db    1
.eh_frame:0000555555556396 db    0
.eh_frame:0000555555556397 db    0
.eh_frame:0000555555556398 db  7Ch ; |
.eh_frame:0000555555556399 db 0F3h
.eh_frame:000055555555639A db 0FFh
.eh_frame:000055555555639B db 0FFh
.eh_frame:000055555555639C db  49h ; I
.eh_frame:000055555555639D db    0
.eh_frame:000055555555639E db    0
.eh_frame:000055555555639F db    0
.eh_frame:00005555555563A0 db    0
.eh_frame:00005555555563A1 db  41h ; A
.eh_frame:00005555555563A2 db  0Eh
.eh_frame:00005555555563A3 db  10h
.eh_frame:00005555555563A4 db  86h
.eh_frame:00005555555563A5 db    2
.eh_frame:00005555555563A6 db  43h ; C
.eh_frame:00005555555563A7 db  0Dh
.eh_frame:00005555555563A8 db    6
.eh_frame:00005555555563A9 db    2
.eh_frame:00005555555563AA db  44h ; D
.eh_frame:00005555555563AB db  0Ch
.eh_frame:00005555555563AC db    7
.eh_frame:00005555555563AD db    8
.eh_frame:00005555555563AE db    0
.eh_frame:00005555555563AF db    0
.eh_frame:00005555555563B0 db  1Ch
.eh_frame:00005555555563B1 db    0
.eh_frame:00005555555563B2 db    0
.eh_frame:00005555555563B3 db    0
.eh_frame:00005555555563B4 db  3Ch ; <
.eh_frame:00005555555563B5 db    1
.eh_frame:00005555555563B6 db    0
.eh_frame:00005555555563B7 db    0
.eh_frame:00005555555563B8 db 0A5h
.eh_frame:00005555555563B9 db 0F3h
.eh_frame:00005555555563BA db 0FFh
.eh_frame:00005555555563BB db 0FFh
.eh_frame:00005555555563BC db  15h
.eh_frame:00005555555563BD db    0
.eh_frame:00005555555563BE db    0
.eh_frame:00005555555563BF db    0
.eh_frame:00005555555563C0 db    0
.eh_frame:00005555555563C1 db  41h ; A
.eh_frame:00005555555563C2 db  0Eh
.eh_frame:00005555555563C3 db  10h
.eh_frame:00005555555563C4 db  86h
.eh_frame:00005555555563C5 db    2
.eh_frame:00005555555563C6 db  43h ; C
.eh_frame:00005555555563C7 db  0Dh
.eh_frame:00005555555563C8 db    6
.eh_frame:00005555555563C9 db  50h ; P
.eh_frame:00005555555563CA db  0Ch
.eh_frame:00005555555563CB db    7
.eh_frame:00005555555563CC db    8
.eh_frame:00005555555563CD db    0
.eh_frame:00005555555563CE db    0
.eh_frame:00005555555563CF db    0
.eh_frame:00005555555563D0 __FRAME_END__ db    0
.eh_frame:00005555555563D1 db    0
.eh_frame:00005555555563D2 db    0
.eh_frame:00005555555563D3 db    0
.eh_frame:00005555555563D3 _eh_frame ends
.eh_frame:00005555555563D3
.gcc_except_table:00005555555563D4 ; ===========================================================================
.gcc_except_table:00005555555563D4
.gcc_except_table:00005555555563D4 ; Segment type: Pure data
.gcc_except_table:00005555555563D4 ; Segment permissions: Read
.gcc_except_table:00005555555563D4 _gcc_except_table segment byte public 'CONST' use64
.gcc_except_table:00005555555563D4 assume cs:_gcc_except_table
.gcc_except_table:00005555555563D4 ;org 5555555563D4h
.gcc_except_table:00005555555563D4 db 0FFh
.gcc_except_table:00005555555563D5 db 0FFh
.gcc_except_table:00005555555563D6 db    1
.gcc_except_table:00005555555563D7 db  0Fh
.gcc_except_table:00005555555563D8 db  36h ; 6
.gcc_except_table:00005555555563D9 db    5
.gcc_except_table:00005555555563DA db 0E1h
.gcc_except_table:00005555555563DB db    1
.gcc_except_table:00005555555563DC db    0
.gcc_except_table:00005555555563DD db  5Ch ; \
.gcc_except_table:00005555555563DE db  3Eh ; >
.gcc_except_table:00005555555563DF db 0FBh
.gcc_except_table:00005555555563E0 db    1
.gcc_except_table:00005555555563E1 db    0
.gcc_except_table:00005555555563E2 db 0F6h
.gcc_except_table:00005555555563E3 db    1
.gcc_except_table:00005555555563E4 db  1Fh
.gcc_except_table:00005555555563E5 db    0
.gcc_except_table:00005555555563E6 db    0
.gcc_except_table:00005555555563E6 _gcc_except_table ends
.gcc_except_table:00005555555563E6
.init_array:0000555555557D10 ; ELF Initialization Function Table
.init_array:0000555555557D10 ; ===========================================================================
.init_array:0000555555557D10
.init_array:0000555555557D10 ; Segment type: Pure data
.init_array:0000555555557D10 ; Segment permissions: Read/Write
.init_array:0000555555557D10 _init_array segment qword public 'DATA' use64
.init_array:0000555555557D10 assume cs:_init_array
.init_array:0000555555557D10 ;org 555555557D10h
.init_array:0000555555557D10 __frame_dummy_init_array_entry dq offset frame_dummy
.init_array:0000555555557D18 dq offset _GLOBAL__sub_I_username
.init_array:0000555555557D18 _init_array ends
.init_array:0000555555557D18
.fini_array:0000555555557D20 ; ELF Termination Function Table
.fini_array:0000555555557D20 ; ===========================================================================
.fini_array:0000555555557D20
.fini_array:0000555555557D20 ; Segment type: Pure data
.fini_array:0000555555557D20 ; Segment permissions: Read/Write
.fini_array:0000555555557D20 _fini_array segment qword public 'DATA' use64
.fini_array:0000555555557D20 assume cs:_fini_array
.fini_array:0000555555557D20 ;org 555555557D20h
.fini_array:0000555555557D20 __do_global_dtors_aux_fini_array_entry dq offset __do_global_dtors_aux
.fini_array:0000555555557D20 _fini_array ends
.fini_array:0000555555557D20
LOAD:0000555555557D28 ; ELF Dynamic Information
LOAD:0000555555557D28 ; ===========================================================================
LOAD:0000555555557D28
LOAD:0000555555557D28 ; Segment type: Pure data
LOAD:0000555555557D28 ; Segment permissions: Read/Write
LOAD:0000555555557D28 LOAD segment mempage public 'DATA' use64
LOAD:0000555555557D28 assume cs:LOAD
LOAD:0000555555557D28 ;org 555555557D28h
LOAD:0000555555557D28 _DYNAMIC Elf64_Dyn <1, 2FCh>            ; DT_NEEDED libstdc++.so.6
LOAD:0000555555557D38 Elf64_Dyn <1, 30Bh>                     ; DT_NEEDED libgcc_s.so.1
LOAD:0000555555557D48 Elf64_Dyn <1, 319h>                     ; DT_NEEDED libc.so.6
LOAD:0000555555557D58 Elf64_Dyn <0Ch, 1000h>                  ; DT_INIT
LOAD:0000555555557D68 Elf64_Dyn <0Dh, 1774h>                  ; DT_FINI
LOAD:0000555555557D78 Elf64_Dyn <19h, 3D10h>                  ; DT_INIT_ARRAY
LOAD:0000555555557D88 Elf64_Dyn <1Bh, 10h>                    ; DT_INIT_ARRAYSZ
LOAD:0000555555557D98 Elf64_Dyn <1Ah, 3D20h>                  ; DT_FINI_ARRAY
LOAD:0000555555557DA8 Elf64_Dyn <1Ch, 8>                      ; DT_FINI_ARRAYSZ
LOAD:0000555555557DB8 Elf64_Dyn <6FFFFEF5h, 3A0h>             ; DT_GNU_HASH
LOAD:0000555555557DC8 Elf64_Dyn <5, 640h>                     ; DT_STRTAB
LOAD:0000555555557DD8 Elf64_Dyn <6, 3D0h>                     ; DT_SYMTAB
LOAD:0000555555557DE8 Elf64_Dyn <0Ah, 372h>                   ; DT_STRSZ
LOAD:0000555555557DF8 Elf64_Dyn <0Bh, 18h>                    ; DT_SYMENT
LOAD:0000555555557E08 Elf64_Dyn <15h, 0>                      ; DT_DEBUG
LOAD:0000555555557E18 Elf64_Dyn <3, 3F38h>                    ; DT_PLTGOT
LOAD:0000555555557E28 Elf64_Dyn <2, 168h>                     ; DT_PLTRELSZ
LOAD:0000555555557E38 Elf64_Dyn <14h, 7>                      ; DT_PLTREL
LOAD:0000555555557E48 Elf64_Dyn <17h, 0BD8h>                  ; DT_JMPREL
LOAD:0000555555557E58 Elf64_Dyn <7, 0A88h>                    ; DT_RELA
LOAD:0000555555557E68 Elf64_Dyn <8, 150h>                     ; DT_RELASZ
LOAD:0000555555557E78 Elf64_Dyn <9, 18h>                      ; DT_RELAENT
LOAD:0000555555557E88 Elf64_Dyn <1Eh, 8>                      ; DT_FLAGS
LOAD:0000555555557E98 Elf64_Dyn <6FFFFFFBh, 8000001h>         ; DT_FLAGS_1
LOAD:0000555555557EA8 Elf64_Dyn <6FFFFFFEh, 9E8h>             ; DT_VERNEED
LOAD:0000555555557EB8 Elf64_Dyn <6FFFFFFFh, 3>                ; DT_VERNEEDNUM
LOAD:0000555555557EC8 Elf64_Dyn <6FFFFFF0h, 9B2h>             ; DT_VERSYM
LOAD:0000555555557ED8 Elf64_Dyn <6FFFFFF9h, 4>                ; DT_RELACOUNT
LOAD:0000555555557EE8 Elf64_Dyn <0>                           ; DT_NULL
LOAD:0000555555557EF8 db    0
LOAD:0000555555557EF9 db    0
LOAD:0000555555557EFA db    0
LOAD:0000555555557EFB db    0
LOAD:0000555555557EFC db    0
LOAD:0000555555557EFD db    0
LOAD:0000555555557EFE db    0
LOAD:0000555555557EFF db    0
LOAD:0000555555557F00 db    0
LOAD:0000555555557F01 db    0
LOAD:0000555555557F02 db    0
LOAD:0000555555557F03 db    0
LOAD:0000555555557F04 db    0
LOAD:0000555555557F05 db    0
LOAD:0000555555557F06 db    0
LOAD:0000555555557F07 db    0
LOAD:0000555555557F08 db    0
LOAD:0000555555557F09 db    0
LOAD:0000555555557F0A db    0
LOAD:0000555555557F0B db    0
LOAD:0000555555557F0C db    0
LOAD:0000555555557F0D db    0
LOAD:0000555555557F0E db    0
LOAD:0000555555557F0F db    0
LOAD:0000555555557F10 db    0
LOAD:0000555555557F11 db    0
LOAD:0000555555557F12 db    0
LOAD:0000555555557F13 db    0
LOAD:0000555555557F14 db    0
LOAD:0000555555557F15 db    0
LOAD:0000555555557F16 db    0
LOAD:0000555555557F17 db    0
LOAD:0000555555557F18 db    0
LOAD:0000555555557F19 db    0
LOAD:0000555555557F1A db    0
LOAD:0000555555557F1B db    0
LOAD:0000555555557F1C db    0
LOAD:0000555555557F1D db    0
LOAD:0000555555557F1E db    0
LOAD:0000555555557F1F db    0
LOAD:0000555555557F20 db    0
LOAD:0000555555557F21 db    0
LOAD:0000555555557F22 db    0
LOAD:0000555555557F23 db    0
LOAD:0000555555557F24 db    0
LOAD:0000555555557F25 db    0
LOAD:0000555555557F26 db    0
LOAD:0000555555557F27 db    0
LOAD:0000555555557F28 db    0
LOAD:0000555555557F29 db    0
LOAD:0000555555557F2A db    0
LOAD:0000555555557F2B db    0
LOAD:0000555555557F2C db    0
LOAD:0000555555557F2D db    0
LOAD:0000555555557F2E db    0
LOAD:0000555555557F2F db    0
LOAD:0000555555557F30 db    0
LOAD:0000555555557F31 db    0
LOAD:0000555555557F32 db    0
LOAD:0000555555557F33 db    0
LOAD:0000555555557F34 db    0
LOAD:0000555555557F35 db    0
LOAD:0000555555557F36 db    0
LOAD:0000555555557F37 db    0
LOAD:0000555555557F37 LOAD ends
LOAD:0000555555557F37
.got:0000555555557F38 ; ===========================================================================
.got:0000555555557F38
.got:0000555555557F38 ; Segment type: Pure data
.got:0000555555557F38 ; Segment permissions: Read/Write
.got:0000555555557F38 _got segment qword public 'DATA' use64
.got:0000555555557F38 assume cs:_got
.got:0000555555557F38 ;org 555555557F38h
.got:0000555555557F38 _GLOBAL_OFFSET_TABLE_ dq 3D28h
.got:0000555555557F40 qword_555555557F40 dq 0                 ; DATA XREF: sub_555555555020↑r
.got:0000555555557F48 qword_555555557F48 dq 0                 ; DATA XREF: sub_555555555020+6↑r
.got:0000555555557F50 _ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_PS3__ptr dq offset _ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_PS3_
.got:0000555555557F50                                         ; DATA XREF: std::operator>><char,std::char_traits<char>>(std::istream &,char*)↑r
.got:0000555555557F50                                         ; std::operator>><char,std::char_traits<char>>(std::istream &,char*)
.got:0000555555557F58 _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc_ptr dq offset _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
.got:0000555555557F58                                         ; DATA XREF: std::string::compare(char const*)↑r
.got:0000555555557F58                                         ; std::string::compare(char const*)
.got:0000555555557F60 _ZNSirsERi_ptr dq offset _ZNSirsERi     ; DATA XREF: std::istream::operator>>(int &)↑r
.got:0000555555557F60                                         ; std::istream::operator>>(int &)
.got:0000555555557F68 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev_ptr dq offset _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
.got:0000555555557F68                                         ; DATA XREF: std::string::~string()↑r
.got:0000555555557F68                                         ; std::string::~string()
.got:0000555555557F70 __cxa_atexit_ptr dq offset __cxa_atexit ; DATA XREF: ___cxa_atexit↑r
.got:0000555555557F78 _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc_ptr dq offset _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.got:0000555555557F78                                         ; DATA XREF: std::operator<<<std::char_traits<char>>(std::ostream &,char const*)↑r
.got:0000555555557F78                                         ; std::operator<<<std::char_traits<char>>(std::ostream &,char const*)
.got:0000555555557F80 _ZNSolsEPFRSoS_E_ptr dq offset _ZNSolsEPFRSoS_E
.got:0000555555557F80                                         ; DATA XREF: std::ostream::operator<<(std::ostream & (*)(std::ostream &))↑r
.got:0000555555557F80                                         ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.got:0000555555557F88 _ZNSaIcED1Ev_ptr dq offset _ZNSaIcED1Ev ; DATA XREF: std::allocator<char>::~allocator()↑r
.got:0000555555557F88                                         ; std::allocator<char>::~allocator()
.got:0000555555557F90 __stack_chk_fail_ptr dq offset __stack_chk_fail
.got:0000555555557F90                                         ; DATA XREF: ___stack_chk_fail↑r
.got:0000555555557F98 _ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE_ptr dq offset _ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE
.got:0000555555557F98                                         ; DATA XREF: std::operator>><char>(std::istream &,std::string &)↑r
.got:0000555555557F98                                         ; std::operator>><char>(std::istream &,std::string &)
.got:0000555555557FA0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3__ptr dq offset _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
.got:0000555555557FA0                                         ; DATA XREF: std::string::basic_string(char const*,std::allocator<char> const&)↑r
.got:0000555555557FA0                                         ; std::string::basic_string(char const*,std::allocator<char> const&)
.got:0000555555557FA8 _ZNSt8ios_base4InitC1Ev_ptr dq offset _ZNSt8ios_base4InitC1Ev
.got:0000555555557FA8                                         ; DATA XREF: std::ios_base::Init::Init(void)↑r
.got:0000555555557FA8                                         ; std::ios_base::Init::Init(void)
.got:0000555555557FB0 _ZNSolsEi_ptr dq offset _ZNSolsEi       ; DATA XREF: std::ostream::operator<<(int)↑r
.got:0000555555557FB0                                         ; std::ostream::operator<<(int)
.got:0000555555557FB8 _Unwind_Resume_ptr dq offset _Unwind_Resume
.got:0000555555557FB8                                         ; DATA XREF: __Unwind_Resume↑r
.got:0000555555557FC0 _ZNSaIcEC1Ev_ptr dq offset _ZNSaIcEC1Ev ; DATA XREF: std::allocator<char>::allocator(void)↑r
.got:0000555555557FC0                                         ; std::allocator<char>::allocator(void)
.got:0000555555557FC8 __cxa_finalize_ptr dq offset __imp___cxa_finalize
.got:0000555555557FC8                                         ; DATA XREF: __cxa_finalize↑r
.got:0000555555557FC8                                         ; __do_global_dtors_aux+E↑r
.got:0000555555557FD0 _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr dq offset _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.got:0000555555557FD0                                         ; DATA XREF: main+D5↑r
.got:0000555555557FD0                                         ; DisplayInfo(void)+1A↑r ...
.got:0000555555557FD0                                         ; std::endl<char,std::char_traits<char>>(std::ostream &)
.got:0000555555557FD8 __libc_start_main_ptr dq offset __libc_start_main
.got:0000555555557FD8                                         ; DATA XREF: _start+1F↑r
.got:0000555555557FE0 _ITM_deregisterTMCloneTable_ptr dq offset _ITM_deregisterTMCloneTable
.got:0000555555557FE0                                         ; DATA XREF: deregister_tm_clones+13↑r
.got:0000555555557FE8 __gmon_start___ptr dq offset __gmon_start__
.got:0000555555557FE8                                         ; DATA XREF: _init_proc+8↑r
.got:0000555555557FF0 _ITM_registerTMCloneTable_ptr dq offset _ITM_registerTMCloneTable
.got:0000555555557FF0                                         ; DATA XREF: register_tm_clones+24↑r
.got:0000555555557FF8 ; void (*lpfunc)(void *)
.got:0000555555557FF8 lpfunc dq offset _ZNSt8ios_base4InitD1Ev
.got:0000555555557FF8                                         ; DATA XREF: __static_initialization_and_destruction_0(int,int)+37↑r
.got:0000555555557FF8 _got ends                               ; std::ios_base::Init::~Init()
.got:0000555555557FF8
.data:0000555555558000 ; ===========================================================================
.data:0000555555558000
.data:0000555555558000 ; Segment type: Pure data
.data:0000555555558000 ; Segment permissions: Read/Write
.data:0000555555558000 _data segment para public 'DATA' use64
.data:0000555555558000 assume cs:_data
.data:0000555555558000 ;org 555555558000h
.data:0000555555558000 public __data_start ; weak
.data:0000555555558000 __data_start db    0                    ; Alternative name is '__data_start'
.data:0000555555558000                                         ; data_start
.data:0000555555558001 db    0
.data:0000555555558002 db    0
.data:0000555555558003 db    0
.data:0000555555558004 db    0
.data:0000555555558005 db    0
.data:0000555555558006 db    0
.data:0000555555558007 db    0
.data:0000555555558008 public __dso_handle
.data:0000555555558008 ; void *_dso_handle
.data:0000555555558008 __dso_handle dq offset __dso_handle     ; DATA XREF: __do_global_dtors_aux+1B↑r
.data:0000555555558008                                         ; __static_initialization_and_destruction_0(int,int)+29↑o ...
.data:0000555555558010 public name1
.data:0000555555558010 name1 db 'Bob Jones',0                  ; DATA XREF: DisplayInfo(void)+3F↑o
.data:000055555555801A align 20h
.data:0000555555558020 public name2
.data:0000555555558020 name2 db 'Sarah Davis',0                ; DATA XREF: DisplayInfo(void)+98↑o
.data:000055555555802C align 10h
.data:0000555555558030 public name3
.data:0000555555558030 name3 db 'Amy Friendly',0               ; DATA XREF: DisplayInfo(void)+F1↑o
.data:000055555555803D align 20h
.data:0000555555558040 public name4
.data:0000555555558040 name4 db 'Johnny Smith',0               ; DATA XREF: DisplayInfo(void)+14A↑o
.data:000055555555804D align 10h
.data:0000555555558050 public name5
.data:0000555555558050 name5 db 'Carol Spears',0               ; DATA XREF: DisplayInfo(void)+1A3↑o
.data:000055555555805D align 20h
.data:0000555555558060 public num1
.data:0000555555558060 num1 dd 1                               ; DATA XREF: DisplayInfo(void)+60↑r
.data:0000555555558060                                         ; ChangeCustomerChoice(void)+61↑w
.data:0000555555558064 public num2
.data:0000555555558064 num2 dd 2                               ; DATA XREF: DisplayInfo(void)+B9↑r
.data:0000555555558064                                         ; ChangeCustomerChoice(void)+7A↑w
.data:0000555555558068 public num3
.data:0000555555558068 num3 dd 1                               ; DATA XREF: DisplayInfo(void)+112↑r
.data:0000555555558068                                         ; ChangeCustomerChoice(void)+93↑w
.data:000055555555806C public num4
.data:000055555555806C num4 dd 1                               ; DATA XREF: DisplayInfo(void)+16B↑r
.data:000055555555806C                                         ; ChangeCustomerChoice(void)+AC↑w
.data:0000555555558070 public num5
.data:0000555555558070 num5 dd 2                               ; DATA XREF: DisplayInfo(void)+1C4↑r
.data:0000555555558070                                         ; ChangeCustomerChoice(void)+C5↑w
.data:0000555555558074 align 20h
.data:0000555555558080 public password
.data:0000555555558080 password db  31h ; 1
.data:0000555555558081 db  32h ; 2
.data:0000555555558082 db  33h ; 3
.data:0000555555558083 db    0
.data:0000555555558084 db    0
.data:0000555555558085 db    0
.data:0000555555558086 db    0
.data:0000555555558087 db    0
.data:0000555555558088 db    0
.data:0000555555558089 db    0
.data:000055555555808A db    0
.data:000055555555808B db    0
.data:000055555555808C db    0
.data:000055555555808D db    0
.data:000055555555808E db    0
.data:000055555555808F db    0
.data:0000555555558090 db    0
.data:0000555555558091 db    0
.data:0000555555558092 db    0
.data:0000555555558093 db    0
.data:0000555555558094 db    0
.data:0000555555558095 db    0
.data:0000555555558096 db    0
.data:0000555555558097 db    0
.data:0000555555558098 public DW_ref___gxx_personality_v0 ; weak
.data:0000555555558098 DW_ref___gxx_personality_v0 dq offset __gxx_personality_v0
.data:0000555555558098 _data ends
.data:0000555555558098
LOAD:00005555555580A0 ; ===========================================================================
LOAD:00005555555580A0
LOAD:00005555555580A0 ; Segment type: Pure data
LOAD:00005555555580A0 ; Segment permissions: Read/Write
LOAD:00005555555580A0 LOAD segment mempage public 'DATA' use64
LOAD:00005555555580A0 assume cs:LOAD
LOAD:00005555555580A0 ;org 5555555580A0h
LOAD:00005555555580A0 public _edata
LOAD:00005555555580A0 _edata db    ? ;                        ; DATA XREF: deregister_tm_clones↑o
LOAD:00005555555580A0                                         ; deregister_tm_clones+7↑o ...
LOAD:00005555555580A0                                         ; Alternative name is '_edata'
LOAD:00005555555580A0                                         ; __TMC_END__
LOAD:00005555555580A1 db    ? ;
LOAD:00005555555580A2 db    ? ;
LOAD:00005555555580A3 db    ? ;
LOAD:00005555555580A4 db    ? ;
LOAD:00005555555580A5 db    ? ;
LOAD:00005555555580A6 db    ? ;
LOAD:00005555555580A7 db    ? ;
LOAD:00005555555580A8 db    ? ;
LOAD:00005555555580A9 db    ? ;
LOAD:00005555555580AA db    ? ;
LOAD:00005555555580AB db    ? ;
LOAD:00005555555580AC db    ? ;
LOAD:00005555555580AD db    ? ;
LOAD:00005555555580AE db    ? ;
LOAD:00005555555580AF db    ? ;
LOAD:00005555555580B0 db    ? ;
LOAD:00005555555580B1 db    ? ;
LOAD:00005555555580B2 db    ? ;
LOAD:00005555555580B3 db    ? ;
LOAD:00005555555580B4 db    ? ;
LOAD:00005555555580B5 db    ? ;
LOAD:00005555555580B6 db    ? ;
LOAD:00005555555580B7 db    ? ;
LOAD:00005555555580B8 db    ? ;
LOAD:00005555555580B9 db    ? ;
LOAD:00005555555580BA db    ? ;
LOAD:00005555555580BB db    ? ;
LOAD:00005555555580BC db    ? ;
LOAD:00005555555580BD db    ? ;
LOAD:00005555555580BE db    ? ;
LOAD:00005555555580BF db    ? ;
LOAD:00005555555580BF LOAD ends
LOAD:00005555555580BF
.bss:00005555555580C0 ; ===========================================================================
.bss:00005555555580C0
.bss:00005555555580C0 ; Segment type: Uninitialized
.bss:00005555555580C0 ; Segment permissions: Read/Write
.bss:00005555555580C0 _bss segment align_64 public 'BSS' use64
.bss:00005555555580C0 assume cs:_bss
.bss:00005555555580C0 ;org 5555555580C0h
.bss:00005555555580C0 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00005555555580C0 public __bss_start
.bss:00005555555580C0 __bss_start dq ?                        ; DATA XREF: main+B↑o
.bss:00005555555580C0                                         ; main+34↑o ...
.bss:00005555555580C0                                         ; Alternative name is 'std::cout'
.bss:00005555555580C0                                         ; _ZSt4cout@GLIBCXX_3.4
.bss:00005555555580C0                                         ; Copy of shared data
.bss:00005555555580C8 db    ? ;
.bss:00005555555580C9 db    ? ;
.bss:00005555555580CA db    ? ;
.bss:00005555555580CB db    ? ;
.bss:00005555555580CC db    ? ;
.bss:00005555555580CD db    ? ;
.bss:00005555555580CE db    ? ;
.bss:00005555555580CF db    ? ;
.bss:00005555555580D0 db    ? ;
.bss:00005555555580D1 db    ? ;
.bss:00005555555580D2 db    ? ;
.bss:00005555555580D3 db    ? ;
.bss:00005555555580D4 db    ? ;
.bss:00005555555580D5 db    ? ;
.bss:00005555555580D6 db    ? ;
.bss:00005555555580D7 db    ? ;
.bss:00005555555580D8 db    ? ;
.bss:00005555555580D9 db    ? ;
.bss:00005555555580DA db    ? ;
.bss:00005555555580DB db    ? ;
.bss:00005555555580DC db    ? ;
.bss:00005555555580DD db    ? ;
.bss:00005555555580DE db    ? ;
.bss:00005555555580DF db    ? ;
.bss:00005555555580E0 db    ? ;
.bss:00005555555580E1 db    ? ;
.bss:00005555555580E2 db    ? ;
.bss:00005555555580E3 db    ? ;
.bss:00005555555580E4 db    ? ;
.bss:00005555555580E5 db    ? ;
.bss:00005555555580E6 db    ? ;
.bss:00005555555580E7 db    ? ;
.bss:00005555555580E8 db    ? ;
.bss:00005555555580E9 db    ? ;
.bss:00005555555580EA db    ? ;
.bss:00005555555580EB db    ? ;
.bss:00005555555580EC db    ? ;
.bss:00005555555580ED db    ? ;
.bss:00005555555580EE db    ? ;
.bss:00005555555580EF db    ? ;
.bss:00005555555580F0 db    ? ;
.bss:00005555555580F1 db    ? ;
.bss:00005555555580F2 db    ? ;
.bss:00005555555580F3 db    ? ;
.bss:00005555555580F4 db    ? ;
.bss:00005555555580F5 db    ? ;
.bss:00005555555580F6 db    ? ;
.bss:00005555555580F7 db    ? ;
.bss:00005555555580F8 db    ? ;
.bss:00005555555580F9 db    ? ;
.bss:00005555555580FA db    ? ;
.bss:00005555555580FB db    ? ;
.bss:00005555555580FC db    ? ;
.bss:00005555555580FD db    ? ;
.bss:00005555555580FE db    ? ;
.bss:00005555555580FF db    ? ;
.bss:0000555555558100 db    ? ;
.bss:0000555555558101 db    ? ;
.bss:0000555555558102 db    ? ;
.bss:0000555555558103 db    ? ;
.bss:0000555555558104 db    ? ;
.bss:0000555555558105 db    ? ;
.bss:0000555555558106 db    ? ;
.bss:0000555555558107 db    ? ;
.bss:0000555555558108 db    ? ;
.bss:0000555555558109 db    ? ;
.bss:000055555555810A db    ? ;
.bss:000055555555810B db    ? ;
.bss:000055555555810C db    ? ;
.bss:000055555555810D db    ? ;
.bss:000055555555810E db    ? ;
.bss:000055555555810F db    ? ;
.bss:0000555555558110 db    ? ;
.bss:0000555555558111 db    ? ;
.bss:0000555555558112 db    ? ;
.bss:0000555555558113 db    ? ;
.bss:0000555555558114 db    ? ;
.bss:0000555555558115 db    ? ;
.bss:0000555555558116 db    ? ;
.bss:0000555555558117 db    ? ;
.bss:0000555555558118 db    ? ;
.bss:0000555555558119 db    ? ;
.bss:000055555555811A db    ? ;
.bss:000055555555811B db    ? ;
.bss:000055555555811C db    ? ;
.bss:000055555555811D db    ? ;
.bss:000055555555811E db    ? ;
.bss:000055555555811F db    ? ;
.bss:0000555555558120 db    ? ;
.bss:0000555555558121 db    ? ;
.bss:0000555555558122 db    ? ;
.bss:0000555555558123 db    ? ;
.bss:0000555555558124 db    ? ;
.bss:0000555555558125 db    ? ;
.bss:0000555555558126 db    ? ;
.bss:0000555555558127 db    ? ;
.bss:0000555555558128 db    ? ;
.bss:0000555555558129 db    ? ;
.bss:000055555555812A db    ? ;
.bss:000055555555812B db    ? ;
.bss:000055555555812C db    ? ;
.bss:000055555555812D db    ? ;
.bss:000055555555812E db    ? ;
.bss:000055555555812F db    ? ;
.bss:0000555555558130 db    ? ;
.bss:0000555555558131 db    ? ;
.bss:0000555555558132 db    ? ;
.bss:0000555555558133 db    ? ;
.bss:0000555555558134 db    ? ;
.bss:0000555555558135 db    ? ;
.bss:0000555555558136 db    ? ;
.bss:0000555555558137 db    ? ;
.bss:0000555555558138 db    ? ;
.bss:0000555555558139 db    ? ;
.bss:000055555555813A db    ? ;
.bss:000055555555813B db    ? ;
.bss:000055555555813C db    ? ;
.bss:000055555555813D db    ? ;
.bss:000055555555813E db    ? ;
.bss:000055555555813F db    ? ;
.bss:0000555555558140 db    ? ;
.bss:0000555555558141 db    ? ;
.bss:0000555555558142 db    ? ;
.bss:0000555555558143 db    ? ;
.bss:0000555555558144 db    ? ;
.bss:0000555555558145 db    ? ;
.bss:0000555555558146 db    ? ;
.bss:0000555555558147 db    ? ;
.bss:0000555555558148 db    ? ;
.bss:0000555555558149 db    ? ;
.bss:000055555555814A db    ? ;
.bss:000055555555814B db    ? ;
.bss:000055555555814C db    ? ;
.bss:000055555555814D db    ? ;
.bss:000055555555814E db    ? ;
.bss:000055555555814F db    ? ;
.bss:0000555555558150 db    ? ;
.bss:0000555555558151 db    ? ;
.bss:0000555555558152 db    ? ;
.bss:0000555555558153 db    ? ;
.bss:0000555555558154 db    ? ;
.bss:0000555555558155 db    ? ;
.bss:0000555555558156 db    ? ;
.bss:0000555555558157 db    ? ;
.bss:0000555555558158 db    ? ;
.bss:0000555555558159 db    ? ;
.bss:000055555555815A db    ? ;
.bss:000055555555815B db    ? ;
.bss:000055555555815C db    ? ;
.bss:000055555555815D db    ? ;
.bss:000055555555815E db    ? ;
.bss:000055555555815F db    ? ;
.bss:0000555555558160 db    ? ;
.bss:0000555555558161 db    ? ;
.bss:0000555555558162 db    ? ;
.bss:0000555555558163 db    ? ;
.bss:0000555555558164 db    ? ;
.bss:0000555555558165 db    ? ;
.bss:0000555555558166 db    ? ;
.bss:0000555555558167 db    ? ;
.bss:0000555555558168 db    ? ;
.bss:0000555555558169 db    ? ;
.bss:000055555555816A db    ? ;
.bss:000055555555816B db    ? ;
.bss:000055555555816C db    ? ;
.bss:000055555555816D db    ? ;
.bss:000055555555816E db    ? ;
.bss:000055555555816F db    ? ;
.bss:0000555555558170 db    ? ;
.bss:0000555555558171 db    ? ;
.bss:0000555555558172 db    ? ;
.bss:0000555555558173 db    ? ;
.bss:0000555555558174 db    ? ;
.bss:0000555555558175 db    ? ;
.bss:0000555555558176 db    ? ;
.bss:0000555555558177 db    ? ;
.bss:0000555555558178 db    ? ;
.bss:0000555555558179 db    ? ;
.bss:000055555555817A db    ? ;
.bss:000055555555817B db    ? ;
.bss:000055555555817C db    ? ;
.bss:000055555555817D db    ? ;
.bss:000055555555817E db    ? ;
.bss:000055555555817F db    ? ;
.bss:0000555555558180 db    ? ;
.bss:0000555555558181 db    ? ;
.bss:0000555555558182 db    ? ;
.bss:0000555555558183 db    ? ;
.bss:0000555555558184 db    ? ;
.bss:0000555555558185 db    ? ;
.bss:0000555555558186 db    ? ;
.bss:0000555555558187 db    ? ;
.bss:0000555555558188 db    ? ;
.bss:0000555555558189 db    ? ;
.bss:000055555555818A db    ? ;
.bss:000055555555818B db    ? ;
.bss:000055555555818C db    ? ;
.bss:000055555555818D db    ? ;
.bss:000055555555818E db    ? ;
.bss:000055555555818F db    ? ;
.bss:0000555555558190 db    ? ;
.bss:0000555555558191 db    ? ;
.bss:0000555555558192 db    ? ;
.bss:0000555555558193 db    ? ;
.bss:0000555555558194 db    ? ;
.bss:0000555555558195 db    ? ;
.bss:0000555555558196 db    ? ;
.bss:0000555555558197 db    ? ;
.bss:0000555555558198 db    ? ;
.bss:0000555555558199 db    ? ;
.bss:000055555555819A db    ? ;
.bss:000055555555819B db    ? ;
.bss:000055555555819C db    ? ;
.bss:000055555555819D db    ? ;
.bss:000055555555819E db    ? ;
.bss:000055555555819F db    ? ;
.bss:00005555555581A0 db    ? ;
.bss:00005555555581A1 db    ? ;
.bss:00005555555581A2 db    ? ;
.bss:00005555555581A3 db    ? ;
.bss:00005555555581A4 db    ? ;
.bss:00005555555581A5 db    ? ;
.bss:00005555555581A6 db    ? ;
.bss:00005555555581A7 db    ? ;
.bss:00005555555581A8 db    ? ;
.bss:00005555555581A9 db    ? ;
.bss:00005555555581AA db    ? ;
.bss:00005555555581AB db    ? ;
.bss:00005555555581AC db    ? ;
.bss:00005555555581AD db    ? ;
.bss:00005555555581AE db    ? ;
.bss:00005555555581AF db    ? ;
.bss:00005555555581B0 db    ? ;
.bss:00005555555581B1 db    ? ;
.bss:00005555555581B2 db    ? ;
.bss:00005555555581B3 db    ? ;
.bss:00005555555581B4 db    ? ;
.bss:00005555555581B5 db    ? ;
.bss:00005555555581B6 db    ? ;
.bss:00005555555581B7 db    ? ;
.bss:00005555555581B8 db    ? ;
.bss:00005555555581B9 db    ? ;
.bss:00005555555581BA db    ? ;
.bss:00005555555581BB db    ? ;
.bss:00005555555581BC db    ? ;
.bss:00005555555581BD db    ? ;
.bss:00005555555581BE db    ? ;
.bss:00005555555581BF db    ? ;
.bss:00005555555581C0 db    ? ;
.bss:00005555555581C1 db    ? ;
.bss:00005555555581C2 db    ? ;
.bss:00005555555581C3 db    ? ;
.bss:00005555555581C4 db    ? ;
.bss:00005555555581C5 db    ? ;
.bss:00005555555581C6 db    ? ;
.bss:00005555555581C7 db    ? ;
.bss:00005555555581C8 db    ? ;
.bss:00005555555581C9 db    ? ;
.bss:00005555555581CA db    ? ;
.bss:00005555555581CB db    ? ;
.bss:00005555555581CC db    ? ;
.bss:00005555555581CD db    ? ;
.bss:00005555555581CE db    ? ;
.bss:00005555555581CF db    ? ;
.bss:00005555555581D0 db    ? ;
.bss:00005555555581D1 db    ? ;
.bss:00005555555581D2 db    ? ;
.bss:00005555555581D3 db    ? ;
.bss:00005555555581D4 db    ? ;
.bss:00005555555581D5 db    ? ;
.bss:00005555555581D6 db    ? ;
.bss:00005555555581D7 db    ? ;
.bss:00005555555581D8 db    ? ;
.bss:00005555555581D9 db    ? ;
.bss:00005555555581DA db    ? ;
.bss:00005555555581DB db    ? ;
.bss:00005555555581DC db    ? ;
.bss:00005555555581DD db    ? ;
.bss:00005555555581DE db    ? ;
.bss:00005555555581DF db    ? ;
.bss:00005555555581E0 public _ZSt3cin@GLIBCXX_3_4
.bss:00005555555581E0 _ZSt3cin@GLIBCXX_3_4 dq ?               ; DATA XREF: main+A0↑o
.bss:00005555555581E0                                         ; CheckUserPermissionAccess(void)+68↑o ...
.bss:00005555555581E0                                         ; Alternative name is 'std::cin'
.bss:00005555555581E0                                         ; Copy of shared data
.bss:00005555555581E8 db    ? ;
.bss:00005555555581E9 db    ? ;
.bss:00005555555581EA db    ? ;
.bss:00005555555581EB db    ? ;
.bss:00005555555581EC db    ? ;
.bss:00005555555581ED db    ? ;
.bss:00005555555581EE db    ? ;
.bss:00005555555581EF db    ? ;
.bss:00005555555581F0 db    ? ;
.bss:00005555555581F1 db    ? ;
.bss:00005555555581F2 db    ? ;
.bss:00005555555581F3 db    ? ;
.bss:00005555555581F4 db    ? ;
.bss:00005555555581F5 db    ? ;
.bss:00005555555581F6 db    ? ;
.bss:00005555555581F7 db    ? ;
.bss:00005555555581F8 db    ? ;
.bss:00005555555581F9 db    ? ;
.bss:00005555555581FA db    ? ;
.bss:00005555555581FB db    ? ;
.bss:00005555555581FC db    ? ;
.bss:00005555555581FD db    ? ;
.bss:00005555555581FE db    ? ;
.bss:00005555555581FF db    ? ;
.bss:0000555555558200 db    ? ;
.bss:0000555555558201 db    ? ;
.bss:0000555555558202 db    ? ;
.bss:0000555555558203 db    ? ;
.bss:0000555555558204 db    ? ;
.bss:0000555555558205 db    ? ;
.bss:0000555555558206 db    ? ;
.bss:0000555555558207 db    ? ;
.bss:0000555555558208 db    ? ;
.bss:0000555555558209 db    ? ;
.bss:000055555555820A db    ? ;
.bss:000055555555820B db    ? ;
.bss:000055555555820C db    ? ;
.bss:000055555555820D db    ? ;
.bss:000055555555820E db    ? ;
.bss:000055555555820F db    ? ;
.bss:0000555555558210 db    ? ;
.bss:0000555555558211 db    ? ;
.bss:0000555555558212 db    ? ;
.bss:0000555555558213 db    ? ;
.bss:0000555555558214 db    ? ;
.bss:0000555555558215 db    ? ;
.bss:0000555555558216 db    ? ;
.bss:0000555555558217 db    ? ;
.bss:0000555555558218 db    ? ;
.bss:0000555555558219 db    ? ;
.bss:000055555555821A db    ? ;
.bss:000055555555821B db    ? ;
.bss:000055555555821C db    ? ;
.bss:000055555555821D db    ? ;
.bss:000055555555821E db    ? ;
.bss:000055555555821F db    ? ;
.bss:0000555555558220 db    ? ;
.bss:0000555555558221 db    ? ;
.bss:0000555555558222 db    ? ;
.bss:0000555555558223 db    ? ;
.bss:0000555555558224 db    ? ;
.bss:0000555555558225 db    ? ;
.bss:0000555555558226 db    ? ;
.bss:0000555555558227 db    ? ;
.bss:0000555555558228 db    ? ;
.bss:0000555555558229 db    ? ;
.bss:000055555555822A db    ? ;
.bss:000055555555822B db    ? ;
.bss:000055555555822C db    ? ;
.bss:000055555555822D db    ? ;
.bss:000055555555822E db    ? ;
.bss:000055555555822F db    ? ;
.bss:0000555555558230 db    ? ;
.bss:0000555555558231 db    ? ;
.bss:0000555555558232 db    ? ;
.bss:0000555555558233 db    ? ;
.bss:0000555555558234 db    ? ;
.bss:0000555555558235 db    ? ;
.bss:0000555555558236 db    ? ;
.bss:0000555555558237 db    ? ;
.bss:0000555555558238 db    ? ;
.bss:0000555555558239 db    ? ;
.bss:000055555555823A db    ? ;
.bss:000055555555823B db    ? ;
.bss:000055555555823C db    ? ;
.bss:000055555555823D db    ? ;
.bss:000055555555823E db    ? ;
.bss:000055555555823F db    ? ;
.bss:0000555555558240 db    ? ;
.bss:0000555555558241 db    ? ;
.bss:0000555555558242 db    ? ;
.bss:0000555555558243 db    ? ;
.bss:0000555555558244 db    ? ;
.bss:0000555555558245 db    ? ;
.bss:0000555555558246 db    ? ;
.bss:0000555555558247 db    ? ;
.bss:0000555555558248 db    ? ;
.bss:0000555555558249 db    ? ;
.bss:000055555555824A db    ? ;
.bss:000055555555824B db    ? ;
.bss:000055555555824C db    ? ;
.bss:000055555555824D db    ? ;
.bss:000055555555824E db    ? ;
.bss:000055555555824F db    ? ;
.bss:0000555555558250 db    ? ;
.bss:0000555555558251 db    ? ;
.bss:0000555555558252 db    ? ;
.bss:0000555555558253 db    ? ;
.bss:0000555555558254 db    ? ;
.bss:0000555555558255 db    ? ;
.bss:0000555555558256 db    ? ;
.bss:0000555555558257 db    ? ;
.bss:0000555555558258 db    ? ;
.bss:0000555555558259 db    ? ;
.bss:000055555555825A db    ? ;
.bss:000055555555825B db    ? ;
.bss:000055555555825C db    ? ;
.bss:000055555555825D db    ? ;
.bss:000055555555825E db    ? ;
.bss:000055555555825F db    ? ;
.bss:0000555555558260 db    ? ;
.bss:0000555555558261 db    ? ;
.bss:0000555555558262 db    ? ;
.bss:0000555555558263 db    ? ;
.bss:0000555555558264 db    ? ;
.bss:0000555555558265 db    ? ;
.bss:0000555555558266 db    ? ;
.bss:0000555555558267 db    ? ;
.bss:0000555555558268 db    ? ;
.bss:0000555555558269 db    ? ;
.bss:000055555555826A db    ? ;
.bss:000055555555826B db    ? ;
.bss:000055555555826C db    ? ;
.bss:000055555555826D db    ? ;
.bss:000055555555826E db    ? ;
.bss:000055555555826F db    ? ;
.bss:0000555555558270 db    ? ;
.bss:0000555555558271 db    ? ;
.bss:0000555555558272 db    ? ;
.bss:0000555555558273 db    ? ;
.bss:0000555555558274 db    ? ;
.bss:0000555555558275 db    ? ;
.bss:0000555555558276 db    ? ;
.bss:0000555555558277 db    ? ;
.bss:0000555555558278 db    ? ;
.bss:0000555555558279 db    ? ;
.bss:000055555555827A db    ? ;
.bss:000055555555827B db    ? ;
.bss:000055555555827C db    ? ;
.bss:000055555555827D db    ? ;
.bss:000055555555827E db    ? ;
.bss:000055555555827F db    ? ;
.bss:0000555555558280 db    ? ;
.bss:0000555555558281 db    ? ;
.bss:0000555555558282 db    ? ;
.bss:0000555555558283 db    ? ;
.bss:0000555555558284 db    ? ;
.bss:0000555555558285 db    ? ;
.bss:0000555555558286 db    ? ;
.bss:0000555555558287 db    ? ;
.bss:0000555555558288 db    ? ;
.bss:0000555555558289 db    ? ;
.bss:000055555555828A db    ? ;
.bss:000055555555828B db    ? ;
.bss:000055555555828C db    ? ;
.bss:000055555555828D db    ? ;
.bss:000055555555828E db    ? ;
.bss:000055555555828F db    ? ;
.bss:0000555555558290 db    ? ;
.bss:0000555555558291 db    ? ;
.bss:0000555555558292 db    ? ;
.bss:0000555555558293 db    ? ;
.bss:0000555555558294 db    ? ;
.bss:0000555555558295 db    ? ;
.bss:0000555555558296 db    ? ;
.bss:0000555555558297 db    ? ;
.bss:0000555555558298 db    ? ;
.bss:0000555555558299 db    ? ;
.bss:000055555555829A db    ? ;
.bss:000055555555829B db    ? ;
.bss:000055555555829C db    ? ;
.bss:000055555555829D db    ? ;
.bss:000055555555829E db    ? ;
.bss:000055555555829F db    ? ;
.bss:00005555555582A0 db    ? ;
.bss:00005555555582A1 db    ? ;
.bss:00005555555582A2 db    ? ;
.bss:00005555555582A3 db    ? ;
.bss:00005555555582A4 db    ? ;
.bss:00005555555582A5 db    ? ;
.bss:00005555555582A6 db    ? ;
.bss:00005555555582A7 db    ? ;
.bss:00005555555582A8 db    ? ;
.bss:00005555555582A9 db    ? ;
.bss:00005555555582AA db    ? ;
.bss:00005555555582AB db    ? ;
.bss:00005555555582AC db    ? ;
.bss:00005555555582AD db    ? ;
.bss:00005555555582AE db    ? ;
.bss:00005555555582AF db    ? ;
.bss:00005555555582B0 db    ? ;
.bss:00005555555582B1 db    ? ;
.bss:00005555555582B2 db    ? ;
.bss:00005555555582B3 db    ? ;
.bss:00005555555582B4 db    ? ;
.bss:00005555555582B5 db    ? ;
.bss:00005555555582B6 db    ? ;
.bss:00005555555582B7 db    ? ;
.bss:00005555555582B8 db    ? ;
.bss:00005555555582B9 db    ? ;
.bss:00005555555582BA db    ? ;
.bss:00005555555582BB db    ? ;
.bss:00005555555582BC db    ? ;
.bss:00005555555582BD db    ? ;
.bss:00005555555582BE db    ? ;
.bss:00005555555582BF db    ? ;
.bss:00005555555582C0 db    ? ;
.bss:00005555555582C1 db    ? ;
.bss:00005555555582C2 db    ? ;
.bss:00005555555582C3 db    ? ;
.bss:00005555555582C4 db    ? ;
.bss:00005555555582C5 db    ? ;
.bss:00005555555582C6 db    ? ;
.bss:00005555555582C7 db    ? ;
.bss:00005555555582C8 db    ? ;
.bss:00005555555582C9 db    ? ;
.bss:00005555555582CA db    ? ;
.bss:00005555555582CB db    ? ;
.bss:00005555555582CC db    ? ;
.bss:00005555555582CD db    ? ;
.bss:00005555555582CE db    ? ;
.bss:00005555555582CF db    ? ;
.bss:00005555555582D0 db    ? ;
.bss:00005555555582D1 db    ? ;
.bss:00005555555582D2 db    ? ;
.bss:00005555555582D3 db    ? ;
.bss:00005555555582D4 db    ? ;
.bss:00005555555582D5 db    ? ;
.bss:00005555555582D6 db    ? ;
.bss:00005555555582D7 db    ? ;
.bss:00005555555582D8 db    ? ;
.bss:00005555555582D9 db    ? ;
.bss:00005555555582DA db    ? ;
.bss:00005555555582DB db    ? ;
.bss:00005555555582DC db    ? ;
.bss:00005555555582DD db    ? ;
.bss:00005555555582DE db    ? ;
.bss:00005555555582DF db    ? ;
.bss:00005555555582E0 db    ? ;
.bss:00005555555582E1 db    ? ;
.bss:00005555555582E2 db    ? ;
.bss:00005555555582E3 db    ? ;
.bss:00005555555582E4 db    ? ;
.bss:00005555555582E5 db    ? ;
.bss:00005555555582E6 db    ? ;
.bss:00005555555582E7 db    ? ;
.bss:00005555555582E8 db    ? ;
.bss:00005555555582E9 db    ? ;
.bss:00005555555582EA db    ? ;
.bss:00005555555582EB db    ? ;
.bss:00005555555582EC db    ? ;
.bss:00005555555582ED db    ? ;
.bss:00005555555582EE db    ? ;
.bss:00005555555582EF db    ? ;
.bss:00005555555582F0 db    ? ;
.bss:00005555555582F1 db    ? ;
.bss:00005555555582F2 db    ? ;
.bss:00005555555582F3 db    ? ;
.bss:00005555555582F4 db    ? ;
.bss:00005555555582F5 db    ? ;
.bss:00005555555582F6 db    ? ;
.bss:00005555555582F7 db    ? ;
.bss:00005555555582F8 completed_0 db ?                        ; DATA XREF: __do_global_dtors_aux+4↑r
.bss:00005555555582F8                                         ; __do_global_dtors_aux+2C↑w
.bss:00005555555582F9 align 20h
.bss:0000555555558300 public username
.bss:0000555555558300 username db    ? ;                      ; DATA XREF: CheckUserPermissionAccess(void)+61↑o
.bss:0000555555558301 db    ? ;
.bss:0000555555558302 db    ? ;
.bss:0000555555558303 db    ? ;
.bss:0000555555558304 db    ? ;
.bss:0000555555558305 db    ? ;
.bss:0000555555558306 db    ? ;
.bss:0000555555558307 db    ? ;
.bss:0000555555558308 db    ? ;
.bss:0000555555558309 db    ? ;
.bss:000055555555830A db    ? ;
.bss:000055555555830B db    ? ;
.bss:000055555555830C db    ? ;
.bss:000055555555830D db    ? ;
.bss:000055555555830E db    ? ;
.bss:000055555555830F db    ? ;
.bss:0000555555558310 db    ? ;
.bss:0000555555558311 db    ? ;
.bss:0000555555558312 db    ? ;
.bss:0000555555558313 db    ? ;
.bss:0000555555558314 public choice
.bss:0000555555558314 choice dd ?                             ; DATA XREF: main+99↑o
.bss:0000555555558314                                         ; main+C2↑r ...
.bss:0000555555558318 public changechoice
.bss:0000555555558318 changechoice dd ?                       ; DATA XREF: ChangeCustomerChoice(void)+17↑o
.bss:0000555555558318                                         ; ChangeCustomerChoice(void)+50↑r ...
.bss:000055555555831C public newservice
.bss:000055555555831C newservice dd ?                         ; DATA XREF: ChangeCustomerChoice(void)+3D↑o
.bss:000055555555831C                                         ; ChangeCustomerChoice(void)+5B↑r ...
.bss:0000555555558320 public answer
.bss:0000555555558320 answer dd ?                             ; DATA XREF: main+1C↑w
.bss:0000555555558320                                         ; main+22↑r ...
.bss:0000555555558324 ; std::ios_base::Init std::__ioinit
.bss:0000555555558324 _ZStL8__ioinit db    ? ;                ; DATA XREF: __static_initialization_and_destruction_0(int,int)+1D↑o
.bss:0000555555558324                                         ; __static_initialization_and_destruction_0(int,int)+30↑o
.bss:0000555555558325 db    ? ;
.bss:0000555555558326 db    ? ;
.bss:0000555555558327 db    ? ;
.bss:0000555555558327 _bss ends
.bss:0000555555558327
.prgend:0000555555558328 ; ===========================================================================
.prgend:0000555555558328
.prgend:0000555555558328 ; Segment type: Zero-length
.prgend:0000555555558328 _prgend segment byte public '' use64
.prgend:0000555555558328 _end label byte
.prgend:0000555555558328 _prgend ends
.prgend:0000555555558328
extern:0000555555558330 ; ===========================================================================
extern:0000555555558330
extern:0000555555558330 ; Segment type: Externs
extern:0000555555558330 ; extern
extern:0000555555558330 ; std::istream & std::operator>><char, std::char_traits<char>>(std::istream &, char*)
extern:0000555555558330 extrn _ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_PS3_:near
extern:0000555555558338 ; std::string::compare(char const*)const
extern:0000555555558338 extrn _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc:near
extern:0000555555558340 ; std::ostream & std::endl<char, std::char_traits<char>>(std::ostream &)
extern:0000555555558340 extrn _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_:near
extern:0000555555558348 ; std::istream::operator>>(int &)
extern:0000555555558348 extrn _ZNSirsERi:near
extern:0000555555558350 ; std::string::~string()
extern:0000555555558350 extrn _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev:near
extern:0000555555558358 ; int _libc_start_main(int (*main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)
extern:0000555555558358 extrn __libc_start_main:near
extern:0000555555558360 ; int _cxa_atexit(void (*lpfunc)(void *), void *obj, void *lpdso_handle)
extern:0000555555558360 extrn __cxa_atexit:near
extern:0000555555558368 ; std::ostream & std::operator<<<std::char_traits<char>>(std::ostream &, char const*)
extern:0000555555558368 extrn _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc:near
extern:0000555555558370 ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
extern:0000555555558370 extrn _ZNSolsEPFRSoS_E:near
extern:0000555555558378 ; std::allocator<char>::~allocator()
extern:0000555555558378 extrn _ZNSaIcED1Ev:near
extern:0000555555558380 extrn __stack_chk_fail:near
extern:0000555555558388 ; std::istream & std::operator>><char>(std::istream &, std::string &)
extern:0000555555558388 extrn _ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE:near
extern:0000555555558390 ; std::string::basic_string(char const*, std::allocator<char> const&)
extern:0000555555558390 extrn _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_:near
extern:0000555555558398 ; _QWORD std::ios_base::Init::Init(std::ios_base::Init *__hidden this)
extern:0000555555558398 extrn _ZNSt8ios_base4InitC1Ev:near
extern:00005555555583A0 extrn __gxx_personality_v0:near
extern:00005555555583A8 ; std::ostream::operator<<(int)
extern:00005555555583A8 extrn _ZNSolsEi:near
extern:00005555555583B0 ; void Unwind_Resume(struct _Unwind_Exception *)
extern:00005555555583B0 extrn _Unwind_Resume:near
extern:00005555555583B8 ; std::allocator<char>::allocator(void)
extern:00005555555583B8 extrn _ZNSaIcEC1Ev:near
extern:00005555555583C0 ; void std::ios_base::Init::~Init(std::ios_base::Init *__hidden this)
extern:00005555555583C0 extrn _ZNSt8ios_base4InitD1Ev:near
extern:00005555555583C8 ; int __cxa_finalize(void *)
extern:00005555555583C8 extrn __imp___cxa_finalize:near ; weak
extern:00005555555583D0 extrn _ITM_deregisterTMCloneTable ; weak
extern:00005555555583D8 extrn __gmon_start__:near ; weak        ; CODE XREF: _init_proc+14↑p
extern:00005555555583E0 extrn _ITM_registerTMCloneTable ; weak
extern:00005555555583E0
extern:00005555555583E0
extern:00005555555583E0 end _start